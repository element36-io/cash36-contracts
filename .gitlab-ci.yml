image: alpine:latest #luongnguyen/oyente

before_script:
 - apk add --no-cache nodejs nodejs-npm git python g++ make
 - npm install -g yarn
 - yarn

stages:
 - build
 - test
# - deploy
 - publish

build:
 stage: build
 script:
   - yarn build
   - yarn lint
   #- for f in ./contracts/*.sol; do python /oyente/oyente/oyente.py -s $f; done

test:
 stage: test
 script:
   - yarn testrpc &
   - yarn test

#deploy:
# stage: deploy
# image: docker:latest
# services:
#   - docker:dind
# script:
#   - docker run -it -v $(pwd):/app ethereum/client-go --datadir /app/geth/data init /app/genesis.json
#   - docker run -d -p 8545:8545 -v $(pwd):/app ethereum/client-go --datadir /app/geth/data --networkid 20170123 --rpc --unlock 0x322ba17d251afdb6d84fd288b5aef518208cccb9 --password /app/password --rpcaddr "0.0.0.0" --verbosity 5
#   - node scripts/waitForEthSync.js
#   - yarn deploy:dev

publish:
  stage: publish
  script:
    - npm install -g npm-publish-git-tag
    - echo "registry=http://167.99.243.81:4873/" > ~/.npmrc
    - echo "//167.99.243.81:4873/:_authToken='${NPM_TOKEN}'" > ~/.npmrc
    - npm-publish-git-tag --access public
  cache:
    policy: pull
    paths:
      - node_modules
  artifacts:
    paths:
      - lib
  only:
    - master