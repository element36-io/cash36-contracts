{
  "contractName": "CHF36",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "transactionHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "InitiateTransfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitializationBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "identityClue",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferClue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "updateCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.15+commit.6a57276f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"transactionHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InitiateTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitializationBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"identityClue\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferClue\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"element36.io\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"changeController(address)\":{\"details\":\"onlyController - only open to the currently assigned controller\",\"params\":{\"_newController\":\"The new controller of the contract\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferClue(bytes32,uint256)\":{\"details\":\"Inititate transfer tokens or funds to  based on  hash of a transaction (DATA, 32 Bytes - hash of a transaction) The idea is following scenario/use case: User Alice has no wallet. Alice uses Cash36 to do a bank-payment to Bob - means that  Cash36 will send funds (Cash36 Tokens) to Bob. If Bob wants to send funds back to Alice (e.g. for yield-payment), Then Bob has no wallet address of Alice. Bob uses the transaction-Id from the initial payment as a clue to refer to Alice and trigger a transfer of his funds (tokens) to Alice.\",\"params\":{\"identityClue\":\"As identity clue the hash of the transaction which holds to the identity of the receiver. Will be evaluated on the server side.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"updateCap(uint256)\":{\"details\":\"Set a new cap for the token\",\"params\":{\"newCap\":\"The new cap for the token\"}}},\"title\":\"CHF36 Token Contract\"},\"userdoc\":{\"methods\":{\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"getInitializationBlock()\":{\"notice\":\"@return Block number in which the contract was initialized\"}}}},\"settings\":{\"compilationTarget\":{\"/home/w/workspace/contracts/contracts/CHF36/CHF36.sol\":\"CHF36\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/w/workspace/contracts/contracts/CHF36/CHF36.sol\":{\"keccak256\":\"0xf92ed92302e73c0f34748ae54fe5eb8b17768f9ee4a5ecb6c1446961f632428e\",\"urls\":[\"bzz-raw://ecf4eea23bc1c395d3df95d4cbd6c74747860a6a50a4252f7e904c9c60ea876c\",\"dweb:/ipfs/QmZgR6DNbN2Tr63z6QMm7Hcz9jLSUT85Pc6kXqgR6kWimn\"]},\"/home/w/workspace/contracts/contracts/Controlled.sol\":{\"keccak256\":\"0xf047b52188243b0aa101d363911e90a14c577fbb76d16405e3ab629f999e389c\",\"urls\":[\"bzz-raw://ebc75b038de7d2d9e2e847aa06a9ff1f19a35ea9cc5f8290a4dbf01e97a73726\",\"dweb:/ipfs/QmNzsnPbmPvFwLvhcUm5CJpHo7XEp3NPJJiGLyJWkSPeBz\"]},\"/home/w/workspace/contracts/contracts/IToken36Controller.sol\":{\"keccak256\":\"0x746085b1845d4b1696ad7ddefe21745c4331c01ac7bade96938d032a8692744a\",\"urls\":[\"bzz-raw://58811c02d1d17dfbaae800545b3865b8eb57a4270358249b670a9d6fb9b2d8fc\",\"dweb:/ipfs/Qma52qUAZFTKtoRDNixkrmL2oFN9zt2C3kxqH4j2PX6ygr\"]},\"/home/w/workspace/contracts/contracts/Initializable.sol\":{\"keccak256\":\"0x60cf064ca310cfb17e0f395ce5147269e35f9ff8f19a92ccad7066f7b214e734\",\"urls\":[\"bzz-raw://23ca4ddf0457d81749dbb578d401112ded664d58392688b7993084fff83264c7\",\"dweb:/ipfs/QmNaXDPKcahpjN8HZUubAsgKJPiRRVoitDiDjee9PfvAFJ\"]},\"/home/w/workspace/contracts/contracts/Token36.sol\":{\"keccak256\":\"0x62bc3d5c7cda5ffd8ed57153bebf451189ee3b10a60641f39c52879912684e8c\",\"urls\":[\"bzz-raw://602579ed798726625409f8fe9294a40a8ab94091d4e12939a18169fba9a83118\",\"dweb:/ipfs/QmTTLgx1f9M4hUGGXcumGeq23GqLRHHkPJaJQuwZxf57uw\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xd1b5c934bab36d753c22987ad98c7614cb50ebf641371a83c96f8138619d7c30\",\"urls\":[\"bzz-raw://69c4bb822caae3d1bfd38e81f03b6d618d4d83cbb8e9f8236d28e1c4fe1d0d81\",\"dweb:/ipfs/QmWamstbFhdySmocF2TSKYVLLZF24JG4aXMvHiRdWKv3RA\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0xd3e5a49edfb74654d122962cc60b917d1c60461e669a7262fd7aba201fac1260\",\"urls\":[\"bzz-raw://0307a3cae4df037aee16fb0b0d94849cb4d9b20d7d7182c185f3efac6d2caec0\",\"dweb:/ipfs/QmezTANBfrJmCvxfmfyfcfFGtbcUEUtoJCjfxKnAePiNoE\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0x4a3a810b7ebe742e897e1fd428b3eeed2196d3acea58eaf9c566ed10d545d2ed\",\"urls\":[\"bzz-raw://28d03f328e19e4099d5013de0649afaeaabac1a614e130767ab1cb4aca9775b6\",\"dweb:/ipfs/Qmb9iW7yNuYehB2NfhRMs9TakqbLVQhBhmGMkaDZ5g1Eb4\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600b81526020016a5377697373204672616e6360a81b8152506040518060400160405280600581526020016421a423199b60d91b81525060126969e10de76676d080000083838382600090805190602001906200007c92919062000301565b5081516200009290600190602085019062000301565b506002805460ff191660ff9290921691909117905550620000c79050620000b862000142565b6001600160e01b036200014716565b600580546001600160a81b03191661010033021790558062000122576040805162461bcd60e51b815260206004820152600f60248201526e06361702063616e6e6f74206265203608c1b604482015290519081900360640190fd5b620001356001600160e01b036200019916565b60095550620003a3915050565b335b90565b620001628160046200020760201b620019461790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b60035415620001ef576040805162461bcd60e51b815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b620002026001600160e01b036200029416565b600355565b6200021c82826001600160e01b036200029816565b156200026f576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b4390565b60006001600160a01b038216620002e15760405162461bcd60e51b815260040180806020018281038252602281526020018062001e8f6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200034457805160ff191683800117855562000374565b8280016001018555821562000374579182015b828111156200037457825182559160200191906001019062000357565b506200038292915062000386565b5090565b6200014491905b808211156200038257600081556001016200038d565b611adc80620003b36000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80635c975abb116100de5780638b3dd74911610097578063a7d6889611610071578063a7d6889614610480578063a9059cbb1461049d578063dd62ed3e146104c9578063f77c4791146104f75761018e565b80638b3dd7491461044457806395d89b411461044c578063a457c2d7146104545761018e565b80635c975abb146103b45780636ef8d66d146103bc57806370a08231146103c457806379cc6790146103ea57806382dc1ec4146104165780638456cb591461043c5761018e565b8063355274ea1161014b5780633f4ba83a116101255780633f4ba83a1461033d57806340c10f191461034557806342966c681461037157806346fbf68e1461038e5761018e565b8063355274ea146102e157806339509351146102e95780633cebb823146103155761018e565b806305810b5f1461019357806306fdde03146101ca578063095ea7b31461024757806318160ddd1461027357806323b872dd1461028d578063313ce567146102c3575b600080fd5b6101b6600480360360408110156101a957600080fd5b508035906020013561051b565b604080519115158252519081900360200190f35b6101d261068b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020c5781810151838201526020016101f4565b50505050905090810190601f1680156102395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b66004803603604081101561025d57600080fd5b506001600160a01b038135169060200135610721565b61027b610783565b60408051918252519081900360200190f35b6101b6600480360360608110156102a357600080fd5b506001600160a01b03813581169160208101359091169060400135610789565b6102cb610921565b6040805160ff9092168252519081900360200190f35b61027b61092a565b6101b6600480360360408110156102ff57600080fd5b506001600160a01b038135169060200135610930565b61033b6004803603602081101561032b57600080fd5b50356001600160a01b03166109b9565b005b61033b610a2f565b6101b66004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610b18565b61033b6004803603602081101561038757600080fd5b5035610bbe565b6101b6600480360360208110156103a457600080fd5b50356001600160a01b0316610bcb565b6101b6610be4565b61033b610bed565b61027b600480360360208110156103da57600080fd5b50356001600160a01b0316610bff565b61033b6004803603604081101561040057600080fd5b506001600160a01b038135169060200135610c1a565b61033b6004803603602081101561042c57600080fd5b50356001600160a01b0316610c28565b61033b610c77565b61027b610d3e565b6101d2610d44565b6101b66004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610da4565b61033b6004803603602081101561049657600080fd5b5035610e2d565b6101b6600480360360408110156104b357600080fd5b506001600160a01b038135169060200135610e80565b61027b600480360360408110156104df57600080fd5b506001600160a01b0381358116916020013516610fa5565b6104ff610fd0565b604080516001600160a01b039092168252519081900360200190f35b60055460009060ff1615610569576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051633a07a6d960e21b81523360048201526024810185905290516101009092046001600160a01b03169163e81e9b6491604480820192602092909190829003018186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b50511515600114610641576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e3336436f6e74726f6c6c65722072656a6563746564207478000000604482015290519081900360640190fd5b61064b3383610fe4565b604080518381529051849133917fd347225bf0a27d694aad46b004147b29a715560ae59eebc52c6852c30c73dbbe9181900360200190a350600192915050565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60055460009060ff161561076f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61077a3384846111cb565b50600192915050565b60085490565b60055460009060ff16156107d7576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81526001600160a01b038781166004830152868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b15801561083957600080fd5b505afa15801561084d573d6000803e3d6000fd5b505050506040513d602081101561086357600080fd5b505115156001146108a55760405162461bcd60e51b8152600401808060200182810382526027815260200180611a816027913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461090c576108c78484846112d3565b6001600160a01b038416600090815260076020908152604080832033808552925290912054610907918691610902908663ffffffff6113e016565b6111cb565b610917565b6109178484846112d3565b5060019392505050565b60025460ff1690565b60095490565b60055460009060ff161561097e576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b038816845290915290205461077a91908590610902908663ffffffff61142916565b60055461010090046001600160a01b03163314610a075760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b610a3f610a3a611483565b610bcb565b610a7a5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b60055460ff16610ac8576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610afb611483565b604080516001600160a01b039092168252519081900360200190a1565b60055460009061010090046001600160a01b03163314610b695760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b60055460ff1615610bb4576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61077a8383611487565b610bc83382610fe4565b50565b6000610bde60048363ffffffff6115d416565b92915050565b60055460ff1690565b610bfd610bf8611483565b61163b565b565b6001600160a01b031660009081526006602052604090205490565b610c248282611683565b5050565b610c33610a3a611483565b610c6e5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b610bc881611800565b610c82610a3a611483565b610cbd5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b60055460ff1615610d08576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610afb611483565b60035490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156107175780601f106106ec57610100808354040283529160200191610717565b60055460009060ff1615610df2576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b038816845290915290205461077a91908590610902908663ffffffff6113e016565b60055461010090046001600160a01b03163314610e7b5760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b600955565b60055460009060ff1615610ece576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81523360048201526001600160a01b03868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d6020811015610f5857600080fd5b50511515600114610f9a5760405162461bcd60e51b8152600401808060200182810382526027815260200180611a816027913960400191505060405180910390fd5b61077a3384846112d3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b60055461010090046001600160a01b031690565b6001600160a01b038216611037576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561108a57600080fd5b505afa15801561109e573d6000803e3d6000fd5b505050506040513d60208110156110b457600080fd5b505115156001146110f65760405162461bcd60e51b8152600401808060200182810382526023815260200180611a5e6023913960400191505060405180910390fd5b600854611109908263ffffffff6113e016565b6008556001600160a01b038216600090815260066020526040902054611135908263ffffffff6113e016565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36040805182815290516001600160a01b038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b6001600160a01b03821661121e576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316611271576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03808416600081815260076020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216611326576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03831660009081526006602052604090205461134f908263ffffffff6113e016565b6001600160a01b038085166000908152600660205260408082209390935590841681522054611384908263ffffffff61142916565b6001600160a01b0380841660008181526006602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061142283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611848565b9392505050565b600082820183811015611422576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0382166114da576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6009546114f5826114e9610783565b9063ffffffff61142916565b111561153d576040805162461bcd60e51b81526020600482015260126024820152711d1bdad95b8818d85c08195e18d95959195960721b604482015290519081900360640190fd5b600854611550908263ffffffff61142916565b6008556001600160a01b03821660009081526006602052604090205461157c908263ffffffff61142916565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b03821661161b5760405162461bcd60e51b8152600401808060200182810382526022815260200180611a3c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61164c60048263ffffffff6118df16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6001600160a01b0382166116d6576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561172957600080fd5b505afa15801561173d573d6000803e3d6000fd5b505050506040513d602081101561175357600080fd5b505115156001146117955760405162461bcd60e51b8152600401808060200182810382526023815260200180611a5e6023913960400191505060405180910390fd5b60055461010090046001600160a01b031633146117f6576117b68282610fe4565b6001600160a01b0382166000908152600760209081526040808320338085529252909120546117f1918491610902908563ffffffff6113e016565b610c24565b610c248282610fe4565b61181160048263ffffffff61194616565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600081848411156118d75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561189c578181015183820152602001611884565b50505050905090810190601f1680156118c95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6118e982826115d4565b6119245760405162461bcd60e51b8152600401808060200182810382526021815260200180611a1b6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61195082826115d4565b156119a2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe616363657373206e6f7420616c6c6f7765642c206f6e6c7920636f6e74726f6c6c6572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865206275726e546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865207472616e73666572a265627a7a72315820ed2c299c255a024d69fc97b83892efe89c925a63afd38c6558ef53b89ce87e8264736f6c634300050f0032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061018e5760003560e01c80635c975abb116100de5780638b3dd74911610097578063a7d6889611610071578063a7d6889614610480578063a9059cbb1461049d578063dd62ed3e146104c9578063f77c4791146104f75761018e565b80638b3dd7491461044457806395d89b411461044c578063a457c2d7146104545761018e565b80635c975abb146103b45780636ef8d66d146103bc57806370a08231146103c457806379cc6790146103ea57806382dc1ec4146104165780638456cb591461043c5761018e565b8063355274ea1161014b5780633f4ba83a116101255780633f4ba83a1461033d57806340c10f191461034557806342966c681461037157806346fbf68e1461038e5761018e565b8063355274ea146102e157806339509351146102e95780633cebb823146103155761018e565b806305810b5f1461019357806306fdde03146101ca578063095ea7b31461024757806318160ddd1461027357806323b872dd1461028d578063313ce567146102c3575b600080fd5b6101b6600480360360408110156101a957600080fd5b508035906020013561051b565b604080519115158252519081900360200190f35b6101d261068b565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020c5781810151838201526020016101f4565b50505050905090810190601f1680156102395780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101b66004803603604081101561025d57600080fd5b506001600160a01b038135169060200135610721565b61027b610783565b60408051918252519081900360200190f35b6101b6600480360360608110156102a357600080fd5b506001600160a01b03813581169160208101359091169060400135610789565b6102cb610921565b6040805160ff9092168252519081900360200190f35b61027b61092a565b6101b6600480360360408110156102ff57600080fd5b506001600160a01b038135169060200135610930565b61033b6004803603602081101561032b57600080fd5b50356001600160a01b03166109b9565b005b61033b610a2f565b6101b66004803603604081101561035b57600080fd5b506001600160a01b038135169060200135610b18565b61033b6004803603602081101561038757600080fd5b5035610bbe565b6101b6600480360360208110156103a457600080fd5b50356001600160a01b0316610bcb565b6101b6610be4565b61033b610bed565b61027b600480360360208110156103da57600080fd5b50356001600160a01b0316610bff565b61033b6004803603604081101561040057600080fd5b506001600160a01b038135169060200135610c1a565b61033b6004803603602081101561042c57600080fd5b50356001600160a01b0316610c28565b61033b610c77565b61027b610d3e565b6101d2610d44565b6101b66004803603604081101561046a57600080fd5b506001600160a01b038135169060200135610da4565b61033b6004803603602081101561049657600080fd5b5035610e2d565b6101b6600480360360408110156104b357600080fd5b506001600160a01b038135169060200135610e80565b61027b600480360360408110156104df57600080fd5b506001600160a01b0381358116916020013516610fa5565b6104ff610fd0565b604080516001600160a01b039092168252519081900360200190f35b60055460009060ff1615610569576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051633a07a6d960e21b81523360048201526024810185905290516101009092046001600160a01b03169163e81e9b6491604480820192602092909190829003018186803b1580156105bf57600080fd5b505afa1580156105d3573d6000803e3d6000fd5b505050506040513d60208110156105e957600080fd5b50511515600114610641576040805162461bcd60e51b815260206004820152601d60248201527f546f6b656e3336436f6e74726f6c6c65722072656a6563746564207478000000604482015290519081900360640190fd5b61064b3383610fe4565b604080518381529051849133917fd347225bf0a27d694aad46b004147b29a715560ae59eebc52c6852c30c73dbbe9181900360200190a350600192915050565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156107175780601f106106ec57610100808354040283529160200191610717565b820191906000526020600020905b8154815290600101906020018083116106fa57829003601f168201915b5050505050905090565b60055460009060ff161561076f576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61077a3384846111cb565b50600192915050565b60085490565b60055460009060ff16156107d7576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81526001600160a01b038781166004830152868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b15801561083957600080fd5b505afa15801561084d573d6000803e3d6000fd5b505050506040513d602081101561086357600080fd5b505115156001146108a55760405162461bcd60e51b8152600401808060200182810382526027815260200180611a816027913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461090c576108c78484846112d3565b6001600160a01b038416600090815260076020908152604080832033808552925290912054610907918691610902908663ffffffff6113e016565b6111cb565b610917565b6109178484846112d3565b5060019392505050565b60025460ff1690565b60095490565b60055460009060ff161561097e576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b038816845290915290205461077a91908590610902908663ffffffff61142916565b60055461010090046001600160a01b03163314610a075760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b610a3f610a3a611483565b610bcb565b610a7a5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b60055460ff16610ac8576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa610afb611483565b604080516001600160a01b039092168252519081900360200190a1565b60055460009061010090046001600160a01b03163314610b695760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b60055460ff1615610bb4576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b61077a8383611487565b610bc83382610fe4565b50565b6000610bde60048363ffffffff6115d416565b92915050565b60055460ff1690565b610bfd610bf8611483565b61163b565b565b6001600160a01b031660009081526006602052604090205490565b610c248282611683565b5050565b610c33610a3a611483565b610c6e5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b610bc881611800565b610c82610a3a611483565b610cbd5760405162461bcd60e51b81526004018080602001828103825260308152602001806119eb6030913960400191505060405180910390fd5b60055460ff1615610d08576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610afb611483565b60035490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156107175780601f106106ec57610100808354040283529160200191610717565b60055460009060ff1615610df2576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b038816845290915290205461077a91908590610902908663ffffffff6113e016565b60055461010090046001600160a01b03163314610e7b5760405162461bcd60e51b81526004018080602001828103825260238152602001806119c86023913960400191505060405180910390fd5b600955565b60055460009060ff1615610ece576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81523360048201526001600160a01b03868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b158015610f2e57600080fd5b505afa158015610f42573d6000803e3d6000fd5b505050506040513d6020811015610f5857600080fd5b50511515600114610f9a5760405162461bcd60e51b8152600401808060200182810382526027815260200180611a816027913960400191505060405180910390fd5b61077a3384846112d3565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b60055461010090046001600160a01b031690565b6001600160a01b038216611037576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561108a57600080fd5b505afa15801561109e573d6000803e3d6000fd5b505050506040513d60208110156110b457600080fd5b505115156001146110f65760405162461bcd60e51b8152600401808060200182810382526023815260200180611a5e6023913960400191505060405180910390fd5b600854611109908263ffffffff6113e016565b6008556001600160a01b038216600090815260066020526040902054611135908263ffffffff6113e016565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36040805182815290516001600160a01b038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b6001600160a01b03821661121e576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316611271576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03808416600081815260076020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216611326576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03831660009081526006602052604090205461134f908263ffffffff6113e016565b6001600160a01b038085166000908152600660205260408082209390935590841681522054611384908263ffffffff61142916565b6001600160a01b0380841660008181526006602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600061142283836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611848565b9392505050565b600082820183811015611422576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b3390565b6001600160a01b0382166114da576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6009546114f5826114e9610783565b9063ffffffff61142916565b111561153d576040805162461bcd60e51b81526020600482015260126024820152711d1bdad95b8818d85c08195e18d95959195960721b604482015290519081900360640190fd5b600854611550908263ffffffff61142916565b6008556001600160a01b03821660009081526006602052604090205461157c908263ffffffff61142916565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b60006001600160a01b03821661161b5760405162461bcd60e51b8152600401808060200182810382526022815260200180611a3c6022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61164c60048263ffffffff6118df16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6001600160a01b0382166116d6576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561172957600080fd5b505afa15801561173d573d6000803e3d6000fd5b505050506040513d602081101561175357600080fd5b505115156001146117955760405162461bcd60e51b8152600401808060200182810382526023815260200180611a5e6023913960400191505060405180910390fd5b60055461010090046001600160a01b031633146117f6576117b68282610fe4565b6001600160a01b0382166000908152600760209081526040808320338085529252909120546117f1918491610902908563ffffffff6113e016565b610c24565b610c248282610fe4565b61181160048263ffffffff61194616565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600081848411156118d75760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561189c578181015183820152602001611884565b50505050905090810190601f1680156118c95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6118e982826115d4565b6119245760405162461bcd60e51b8152600401808060200182810382526021815260200180611a1b6021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61195082826115d4565b156119a2576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe616363657373206e6f7420616c6c6f7765642c206f6e6c7920636f6e74726f6c6c6572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865206275726e546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865207472616e73666572a265627a7a72315820ed2c299c255a024d69fc97b83892efe89c925a63afd38c6558ef53b89ce87e8264736f6c634300050f0032",
  "sourceMap": "111:243:0:-;;;271:81;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:81:0;1042:286:15;;;;;;;;;;;;;-1:-1:-1;;;1042:286:15;;;;;;;;;;;;;;;;-1:-1:-1;;;1042:286:15;;;324:2:0;328:15;1179:4:15;1185:6;1193:8;512:4:29;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:29;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:29;:20;;-1:-1:-1;;552:20:29;;;;;;;;;;;;-1:-1:-1;318:24:23;;-1:-1:-1;329:12:23;:10;:12::i;:::-;-1:-1:-1;;;;;318:10:23;:24;:::i;:::-;1013:7:24;:15;;-1:-1:-1;;;;;;431:24:6;1013:15:24;445:10:6;431:24;;;;1222:7:15;1214:35;;;;;-1:-1:-1;;;1214:35:15;;;;;;;;;;;;-1:-1:-1;;;1214:35:15;;;;;;;;;;;;;;;1260:13;-1:-1:-1;;;;;1260:11:15;:13;:::i;:::-;1311:4;:10;-1:-1:-1;111:243:0;;-1:-1:-1;;111:243:0;788:96:21;867:10;788:96;;:::o;786:119:23:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:23;;;;;;;;786:119;:::o;753:96:13:-;252:19;;:24;244:56;;;;;-1:-1:-1;;;244:56:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:16;-1:-1:-1;;;;;826:14:13;:16;:::i;:::-;804:19;:38;753:96::o;260:175:22:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:22;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:22;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:22;424:4;401:27;;;260:175::o;917:94:13:-;992:12;917:94;:::o;779:200:22:-;851:4;-1:-1:-1;;;;;875:21:22;;867:68;;;;-1:-1:-1;;;867:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:22;:11;:20;;;;;;;;;;;;;;;779:200::o;111:243:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;111:243:0;;;-1:-1:-1;111:243:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "111:243:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:243:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3859:399:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3859:399:15;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;644:81:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4894:159:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4894:159:15;;;;;;;;:::i;1398:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;5516:580;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5516:580:15;;;;;;;;;;;;;;;;;:::i;1472:81:29:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1562:73:15;;;:::i;6610:214::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6610:214:15;;;;;;;;:::i;771:117:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;771:117:6;-1:-1:-1;;;;;771:117:6;;:::i;:::-;;1892::24;;;:::i;8314:146:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8314:146:15;;;;;;;;:::i;9273:79::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9273:79:15;;:::i;494:107:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:23;-1:-1:-1;;;;;494:107:23;;:::i;1130:76:24:-;;;:::i;703:77:23:-;;;:::i;2043:104:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2043:104:15;-1:-1:-1;;;;;2043:104:15;;:::i;9409:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9409:101:15;;;;;;;;:::i;607:90:23:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:23;-1:-1:-1;;;;;607:90:23;;:::i;1687:115:24:-;;;:::i;533:107:13:-;;;:::i;838:85:29:-;;;:::i;7343:224:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7343:224:15;;;;;;;;:::i;1744:87::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1744:87:15;;:::i;2774:287::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2774:287:15;;;;;;;;:::i;2478:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2478:129:15;;;;;;;;;;:::i;468:87:6:-;;;:::i;:::-;;;;-1:-1:-1;;;;;468:87:6;;;;;;;;;;;;;;3859:399:15;1359:7:24;;3948:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;3991:11:15;;3972:61;;;-1:-1:-1;;;3972:61:15;;4015:10;3972:61;;;;;;;;;;;;3991:11;;;;-1:-1:-1;;;;;3991:11:15;;3972:42;;:61;;;;;;;;;;;;;;;3991:11;3972:61;;;5:2:-1;;;;30:1;27;20:12;5:2;3972:61:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3972:61:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3972:61:15;:69;;4037:4;3972:69;3964:111;;;;;-1:-1:-1;;;3964:111:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;4145:23;4151:10;4162:5;4145;:23::i;:::-;4183:47;;;;;;;;4211:12;;4200:10;;4183:47;;;;;;;;;-1:-1:-1;4247:4:15;3859:399;;;;:::o;644:81:29:-;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;4894:159:15:-;1359:7:24;;4973:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;4989:36:15;4998:10;5010:7;5019:5;4989:8;:36::i;:::-;-1:-1:-1;5042:4:15;4894:159;;;;:::o;1398:89::-;1468:12;;1398:89;:::o;5516:580::-;1359:7:24;;5609:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;5652:11:15;;5633:59;;;-1:-1:-1;;;5633:59:15;;-1:-1:-1;;;;;5633:59:15;;;;;;;;;;;;;;;;;;;;;;5652:11;;;;;;;;5633:42;;:59;;;;;;;;;;;;;;;5652:11;5633:59;;;5:2:-1;;;;30:1;27;20:12;5:2;5633:59:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5633:59:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5633:59:15;:67;;5696:4;5633:67;5625:119;;;;-1:-1:-1;;;5625:119:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5869:11;;;;;-1:-1:-1;;;;;5869:11:15;5855:10;:25;5851:218;;5896:26;5906:4;5912:2;5916:5;5896:9;:26::i;:::-;-1:-1:-1;;;;;5963:14:15;;;;;;:8;:14;;;;;;;;5951:10;5963:26;;;;;;;;;5936:65;;5945:4;;5963:37;;5994:5;5963:37;:30;:37;:::i;:::-;5936:8;:65::i;:::-;5851:218;;;6032:26;6042:4;6048:2;6052:5;6032:9;:26::i;:::-;-1:-1:-1;6085:4:15;5516:580;;;;;:::o;1472:81:29:-;1537:9;;;;1472:81;:::o;1562:73:15:-;1624:4;;1562:73;:::o;6610:214::-;1359:7:24;;6704:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;6729:10:15;6750:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;6750:29:15;;;;;;;;;;6720:76;;6729:10;6741:7;;6750:45;;6784:10;6750:45;:33;:45;:::i;771:117:6:-;306:11;;;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:11;:28;;-1:-1:-1;;;;;853:28:6;;;;;-1:-1:-1;;;;;;853:28:6;;;;;;;;;771:117::o;1892::24:-;395:22:23;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;-1:-1:-1;;;387:83:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1550:7:24;;;;1542:40;;;;;-1:-1:-1;;;1542:40:24;;;;;;;;;;;;-1:-1:-1;;;1542:40:24;;;;;;;;;;;;;;;1950:7;:15;;-1:-1:-1;;1950:15:24;;;1980:22;1989:12;:10;:12::i;:::-;1980:22;;;-1:-1:-1;;;;;1980:22:24;;;;;;;;;;;;;;1892:117::o;8314:146:15:-;306:11:6;;8400:4:15;;306:11:6;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:7:24;;;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;8416:16:15;8422:2;8426:5;8416;:16::i;9273:79::-;9320:25;9326:10;9338:6;9320:5;:25::i;:::-;9273:79;:::o;494:107:23:-;550:4;573:21;:8;586:7;573:21;:12;:21;:::i;:::-;566:28;494:107;-1:-1:-1;;494:107:23:o;1130:76:24:-;1192:7;;;;1130:76;:::o;703:77:23:-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;2043:104:15:-;-1:-1:-1;;;;;2124:16:15;2098:7;2124:16;;;:9;:16;;;;;;;2043:104::o;9409:101::-;9477:26;9487:7;9496:6;9477:9;:26::i;:::-;9409:101;;:::o;607:90:23:-;395:22;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;1687:115:24:-;395:22:23;404:12;:10;:12::i;395:22::-;387:83;;;;-1:-1:-1;;;387:83:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:7:24;;;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;1746:7;:14;;-1:-1:-1;;1746:14:24;1756:4;1746:14;;;1775:20;1782:12;:10;:12::i;533:107:13:-;614:19;;533:107;:::o;838:85:29:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;7343:224:15;1359:7:24;;7442:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;7467:10:15;7488:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;7488:29:15;;;;;;;;;;7458:81;;7467:10;7479:7;;7488:50;;7522:15;7488:50;:33;:50;:::i;1744:87::-;306:11:6;;;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1811:4:15;:13;1744:87::o;2774:287::-;1359:7:24;;2849:4:15;;1359:7:24;;1358:8;1350:37;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;-1:-1:-1;;;1350:37:24;;;;;;;;;;;;;;;2892:11:15;;2873:65;;;-1:-1:-1;;;2873:65:15;;2916:10;2873:65;;;;-1:-1:-1;;;;;2873:65:15;;;;;;;;;;;;;;;2892:11;;;;;;;;2873:42;;:65;;;;;;;;;;;;;;;2892:11;2873:65;;;5:2:-1;;;;30:1;27;20:12;5:2;2873:65:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2873:65:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2873:65:15;:73;;2942:4;2873:73;2865:125;;;;-1:-1:-1;;;2865:125:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3001:32;3011:10;3023:2;3027:5;3001:9;:32::i;2478:129::-;-1:-1:-1;;;;;2576:15:15;;;2550:7;2576:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2478:129::o;468:87:6:-;537:11;;;;;-1:-1:-1;;;;;537:11:6;;468:87::o;9736:489:15:-;-1:-1:-1;;;;;9810:21:15;;9802:55;;;;;-1:-1:-1;;;9802:55:15;;;;;;;;;;;;-1:-1:-1;;;9802:55:15;;;;;;;;;;;;;;;9894:11;;9875:47;;;-1:-1:-1;;;9875:47:15;;-1:-1:-1;;;;;9875:47:15;;;;;;;;;9894:11;;;;;;;;9875:38;;:47;;;;;;;;;;;;;;;9894:11;9875:47;;;5:2:-1;;;;30:1;27;20:12;5:2;9875:47:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9875:47:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9875:47:15;:55;;9926:4;9875:55;9867:103;;;;-1:-1:-1;;;9867:103:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9996:12;;:23;;10013:5;9996:23;:16;:23;:::i;:::-;9981:12;:38;-1:-1:-1;;;;;10050:18:15;;;;;;:9;:18;;;;;;:29;;10073:5;10050:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;10029:18:15;;;;;;:9;:18;;;;;;;;:50;;;;10094:36;;;;;;;10029:18;;10094:36;;;;;;;;;;;10198:20;;;;;;;;-1:-1:-1;;;;;10198:20:15;;;;;;;;;;;;;9736:489;;:::o;11430:298::-;-1:-1:-1;;;;;11522:21:15;;11514:55;;;;;-1:-1:-1;;;11514:55:15;;;;;;;;;;;;-1:-1:-1;;;11514:55:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;11587:19:15;;11579:53;;;;;-1:-1:-1;;;11579:53:15;;;;;;;;;;;;-1:-1:-1;;;11579:53:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;11643:15:15;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;11690:31;;;;;;;;;;;;;;;;;11430:298;;;:::o;7786:281::-;-1:-1:-1;;;;;7873:16:15;;7865:50;;;;;-1:-1:-1;;;7865:50:15;;;;;;;;;;;;-1:-1:-1;;;7865:50:15;;;;;;;;;;;;;;;-1:-1:-1;;;;;7944:15:15;;;;;;:9;:15;;;;;;:26;;7964:5;7944:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;7926:15:15;;;;;;;:9;:15;;;;;;:44;;;;7996:13;;;;;;;:24;;8014:5;7996:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;7980:13:15;;;;;;;:9;:13;;;;;;;;;:40;;;;8035:25;;;;;;;7980:13;;8035:25;;;;;;;;;;;;;7786:281;;;:::o;1274:134:25:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:25:o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:25;;;;;;;;;;;;;;;;;;;;;;;;;;;788:96:21;867:10;788:96;:::o;8803:361:15:-;-1:-1:-1;;;;;8877:21:15;;8869:55;;;;;-1:-1:-1;;;8869:55:15;;;;;;;;;;;;-1:-1:-1;;;8869:55:15;;;;;;;;;;;;;;;8970:4;;8942:24;8960:5;8942:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;8934:63;;;;;-1:-1:-1;;;8934:63:15;;;;;;;;;;;;-1:-1:-1;;;8934:63:15;;;;;;;;;;;;;;;9023:12;;:23;;9040:5;9023:23;:16;:23;:::i;:::-;9008:12;:38;-1:-1:-1;;;;;9077:18:15;;;;;;:9;:18;;;;;;:29;;9100:5;9077:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;9056:18:15;;;;;;:9;:18;;;;;;;;:50;;;;9121:36;;;;;;;9056:18;;;;9121:36;;;;;;;;;;8803:361;;:::o;779:200:22:-;851:4;-1:-1:-1;;;;;875:21:22;;867:68;;;;-1:-1:-1;;;867:68:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:22;:11;:20;;;;;;;;;;;;;;;779:200::o;911:127:23:-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;-1:-1:-1;;;;;1009:22:23;;;;;;;;911:127;:::o;10614:551:15:-;-1:-1:-1;;;;;10692:21:15;;10684:55;;;;;-1:-1:-1;;;10684:55:15;;;;;;;;;;;;-1:-1:-1;;;10684:55:15;;;;;;;;;;;;;;;10776:11;;10757:47;;;-1:-1:-1;;;10757:47:15;;-1:-1:-1;;;;;10757:47:15;;;;;;;;;10776:11;;;;;;;;10757:38;;:47;;;;;;;;;;;;;;;10776:11;10757:47;;;5:2:-1;;;;30:1;27;20:12;5:2;10757:47:15;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10757:47:15;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10757:47:15;:55;;10808:4;10757:55;10749:103;;;;-1:-1:-1;;;10749:103:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10881:11;;;;;-1:-1:-1;;;;;10881:11:15;10867:10;:25;10863:296;;10908:21;10914:7;10923:5;10908;:21::i;:::-;-1:-1:-1;;;;;10973:17:15;;;;;;:8;:17;;;;;;;;10961:10;10973:29;;;;;;;;;10943:71;;10952:7;;10973:40;;11007:5;10973:40;:33;:40;:::i;10943:71::-;10863:296;;;11127:21;11133:7;11142:5;11127;:21::i;786:119:23:-;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:23;;;;;;;;786:119;:::o;1732:187:25:-;1818:7;1853:12;1845:6;;;;1837:29;;;;-1:-1:-1;;;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:25;;;1732:187::o;510:180:22:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:22;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:22;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:22;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:22;424:4;401:27;;;260:175::o",
  "source": "pragma solidity ^0.5.9;\n\nimport \"./../Token36.sol\";\n\n\n/// @title CHF36 Token Contract\n/// @author element36.io\ncontract CHF36 is Token36 {\n\n    // Constructor\n    // Initial cap of 500'000 Tokens given by current sandbox limitation\n    /* solium-disable-next-line */\n    constructor() public Token36(\"Swiss Franc\", \"CHF36\", 18, 500000 * 10**18) {\n    }\n}",
  "sourcePath": "/home/w/workspace/contracts/contracts/CHF36/CHF36.sol",
  "ast": {
    "absolutePath": "/home/w/workspace/contracts/contracts/CHF36/CHF36.sol",
    "exportedSymbols": {
      "CHF36": [
        19
      ]
    },
    "id": 20,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/home/w/workspace/contracts/contracts/Token36.sol",
        "file": "./../Token36.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 20,
        "sourceUnit": 2225,
        "src": "25:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Token36",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2224,
              "src": "129:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token36_$2224",
                "typeString": "contract Token36"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "129:7:0"
          }
        ],
        "contractDependencies": [
          1085,
          1332,
          2224,
          2862,
          3050,
          3138,
          3936,
          4005
        ],
        "contractKind": "contract",
        "documentation": "@title CHF36 Token Contract\n @author element36.io",
        "fullyImplemented": true,
        "id": 19,
        "linearizedBaseContracts": [
          19,
          2224,
          1085,
          3138,
          3050,
          2862,
          1332,
          3936,
          4005
        ],
        "name": "CHF36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "345:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5377697373204672616e63",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3f972cf807ae0e03fb82eebdabc1570b629e6439693c864b25faaf11005c9959",
                      "typeString": "literal_string \"Swiss Franc\""
                    },
                    "value": "Swiss Franc"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4348463336",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "315:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b79716ffeb6428ec5e9872d1fdd55aae534ecc5c94ea15874ed66bb42dffbea",
                      "typeString": "literal_string \"CHF36\""
                    },
                    "value": "CHF36"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "324:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "353030303030",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "328:6:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000_by_1",
                        "typeString": "int_const 500000"
                      },
                      "value": "500000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "341:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "337:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "328:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    }
                  }
                ],
                "id": 15,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6,
                  "name": "Token36",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2224,
                  "src": "292:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Token36_$2224_$",
                    "typeString": "type(contract Token36)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:52:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:0"
            },
            "scope": 19,
            "src": "271:81:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 20,
        "src": "111:243:0"
      }
    ],
    "src": "0:354:0"
  },
  "legacyAST": {
    "absolutePath": "/home/w/workspace/contracts/contracts/CHF36/CHF36.sol",
    "exportedSymbols": {
      "CHF36": [
        19
      ]
    },
    "id": 20,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "absolutePath": "/home/w/workspace/contracts/contracts/Token36.sol",
        "file": "./../Token36.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 20,
        "sourceUnit": 2225,
        "src": "25:26:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3,
              "name": "Token36",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2224,
              "src": "129:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token36_$2224",
                "typeString": "contract Token36"
              }
            },
            "id": 4,
            "nodeType": "InheritanceSpecifier",
            "src": "129:7:0"
          }
        ],
        "contractDependencies": [
          1085,
          1332,
          2224,
          2862,
          3050,
          3138,
          3936,
          4005
        ],
        "contractKind": "contract",
        "documentation": "@title CHF36 Token Contract\n @author element36.io",
        "fullyImplemented": true,
        "id": 19,
        "linearizedBaseContracts": [
          19,
          2224,
          1085,
          3138,
          3050,
          2862,
          1332,
          3936,
          4005
        ],
        "name": "CHF36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "345:7:0",
              "statements": []
            },
            "documentation": null,
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "5377697373204672616e63",
                    "id": 7,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:13:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_3f972cf807ae0e03fb82eebdabc1570b629e6439693c864b25faaf11005c9959",
                      "typeString": "literal_string \"Swiss Franc\""
                    },
                    "value": "Swiss Franc"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4348463336",
                    "id": 8,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "315:7:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_8b79716ffeb6428ec5e9872d1fdd55aae534ecc5c94ea15874ed66bb42dffbea",
                      "typeString": "literal_string \"CHF36\""
                    },
                    "value": "CHF36"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 9,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "324:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    },
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "353030303030",
                      "id": 10,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "328:6:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000_by_1",
                        "typeString": "int_const 500000"
                      },
                      "value": "500000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 13,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 11,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "337:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 12,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "341:2:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "337:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "328:15:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    }
                  }
                ],
                "id": 15,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 6,
                  "name": "Token36",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2224,
                  "src": "292:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Token36_$2224_$",
                    "typeString": "type(contract Token36)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:52:0"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:0"
            },
            "returnParameters": {
              "id": 16,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "345:0:0"
            },
            "scope": 19,
            "src": "271:81:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 20,
        "src": "111:243:0"
      }
    ],
    "src": "0:354:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.15+commit.6a57276f.Emscripten.clang"
  },
  "networks": {
    "85458545": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event",
          "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
        },
        "0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "burner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Burn",
          "type": "event",
          "signature": "0xcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5"
        },
        "0xd347225bf0a27d694aad46b004147b29a715560ae59eebc52c6852c30c73dbbe": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "bytes32",
              "name": "transactionHash",
              "type": "bytes32"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "InitiateTransfer",
          "type": "event",
          "signature": "0xd347225bf0a27d694aad46b004147b29a715560ae59eebc52c6852c30c73dbbe"
        },
        "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Paused",
          "type": "event",
          "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
        },
        "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserAdded",
          "type": "event",
          "signature": "0x6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f8"
        },
        "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "PauserRemoved",
          "type": "event",
          "signature": "0xcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event",
          "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
        },
        "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "Unpaused",
          "type": "event",
          "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
        }
      },
      "links": {},
      "address": "0x970e8f18ebfEa0B08810f33a5A40438b9530FBCF",
      "transactionHash": "0x1168685dd4a6f9d73695da76686ff728318eda3b0e3346e458cd521de54a28dd"
    }
  },
  "schemaVersion": "3.0.20",
  "updatedAt": "2020-01-18T11:35:36.502Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "element36.io",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "changeController(address)": {
        "details": "onlyController - only open to the currently assigned controller",
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferClue(bytes32,uint256)": {
        "details": "Inititate transfer tokens or funds to  based on  hash of a transaction (DATA, 32 Bytes - hash of a transaction) The idea is following scenario/use case: User Alice has no wallet. Alice uses Cash36 to do a bank-payment to Bob - means that  Cash36 will send funds (Cash36 Tokens) to Bob. If Bob wants to send funds back to Alice (e.g. for yield-payment), Then Bob has no wallet address of Alice. Bob uses the transaction-Id from the initial payment as a clue to refer to Alice and trigger a transfer of his funds (tokens) to Alice.",
        "params": {
          "identityClue": "As identity clue the hash of the transaction which holds to the identity of the receiver. Will be evaluated on the server side.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "updateCap(uint256)": {
        "details": "Set a new cap for the token",
        "params": {
          "newCap": "The new cap for the token"
        }
      }
    },
    "title": "CHF36 Token Contract"
  },
  "userdoc": {
    "methods": {
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "getInitializationBlock()": {
        "notice": "@return Block number in which the contract was initialized"
      }
    }
  }
}