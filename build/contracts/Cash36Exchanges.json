{
  "contractName": "Cash36Exchanges",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addExchange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "removeExchange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_exchange",
          "type": "address"
        },
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "isAllowedExchange",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getAllExchanges",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getAllExchanges\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchange\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"addExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_exchange\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isAllowedExchange\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_exchange\",\"type\":\"address\"},{\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"removeExchange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"element36.io\",\"methods\":{\"addExchange(address,address)\":{\"details\":\"Exchange can not be another Smart ContractonlyOwner - only open to element36 Account\",\"params\":{\"_exchange\":\"Address of the exchange\"}},\"getAllExchanges(address)\":{\"details\":\"Note: Due to limitations of solidity, this method returns the full list of every address ever registered.It does not consider exchanges, which might have been flagged false afterwards.Therefore to be sure, an additional call to isAllowedExchange, would be necessary.\",\"params\":{\"_token\":\"Address of the token\"},\"return\":\"{  \\\"address[]\\\": List of address of exchanges }\"},\"isAllowedExchange(address,address)\":{\"params\":{\"_exchange\":\"Address of the exchange\"},\"return\":\"{  \\\"bool\\\": \\\"true when Exchange is listed\\\" }\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeExchange(address,address)\":{\"details\":\"onlyOwner - only open to element36 Account\",\"params\":{\"_exchange\":\"Address of the exchange\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Cash36 Exchanges Contract\"},\"userdoc\":{\"methods\":{\"addExchange(address,address)\":{\"notice\":\"Add an exchange to the list of accepted Exchanges\"},\"getAllExchanges(address)\":{\"notice\":\"Returns all registered exchange addresses for a given token address.\"},\"isAllowedExchange(address,address)\":{\"notice\":\"Check if an exchange is on the list of accepted Exchanges\"},\"removeExchange(address,address)\":{\"notice\":\"Remove an exchange from the list of accepted Exchanges\"}},\"notice\":\"Is responsible for keeping track of all registered Exchanges.\"}},\"settings\":{\"compilationTarget\":{\"/Users/bum/element36/dev/cash36/contracts/contracts/Cash36Exchanges.sol\":\"Cash36Exchanges\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bum/element36/dev/cash36/contracts/contracts/Cash36Exchanges.sol\":{\"keccak256\":\"0x437a3062feea96e01cac70e3bc236458bcb30f53031d0f9c23c7ab79f32d4ae8\",\"urls\":[\"bzzr://db2e281fd45ed0f78dbb4c4dec9856d20656ff2f026834c5fd50f93ec60cbd8d\",\"dweb:/ipfs/QmUKzdxAJg1Kovwq8FtbYw9Beo47kk9DU592at6kVq9Rey\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xf79fb10e8235770eb4aea7249034076a3cc9f9119ad944fc48705bae9c9d20dc\",\"urls\":[\"bzzr://d12a11272051eb6586de8f7e0a82c04a98c9984ce8b2a6cf1ee439f65aba29a9\",\"dweb:/ipfs/QmS55hgTvNEAKinus19m65CB4wcymN8EiUPFpRx5tYJ1i2\"]}},\"version\":1}",
  "bytecode": "0x60806040819052600080546001600160a01b03191633178082556001600160a01b0316917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a36105e0806100576000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638f32d59b1161005b5780638f32d59b1461015f578063ea13d8a11461017b578063f00065b6146101a9578063f2fde38b146101d757610088565b80631a0020d61461008d578063715018a6146101035780637f604b451461010d5780638da5cb5b1461013b575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b03166101fd565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ef5781810151838201526020016100d7565b505050509050019250505060405180910390f35b61010b610273565b005b61010b6004803603604081101561012357600080fd5b506001600160a01b0381358116916020013516610304565b6101436103aa565b604080516001600160a01b039092168252519081900360200190f35b6101676103b9565b604080519115158252519081900360200190f35b6101676004803603604081101561019157600080fd5b506001600160a01b03813581169160200135166103ca565b61010b600480360360408110156101bf57600080fd5b506001600160a01b03813581169160200135166103f9565b61010b600480360360208110156101ed57600080fd5b50356001600160a01b0316610472565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561026757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610249575b50505050509050919050565b61027b6103b9565b6102ba576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61030c6103b9565b61034b576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6001600160a01b039081166000818152600160208181526040808420805480850182559085528285200180546001600160a01b03191697909616968717909555928252600283528382209482529390915220805460ff19169091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001600160a01b0380821660009081526002602090815260408083209386168352929052205460ff1692915050565b6104016103b9565b610440576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6001600160a01b039081166000908152600260209081526040808320949093168252929092529020805460ff19169055565b61047a6103b9565b6104b9576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6104c2816104c5565b50565b6001600160a01b03811661050a5760405162461bcd60e51b81526004018080602001828103825260268152602001806105666026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72305820544ff89e36c078334a56b52725f12b00abce64f96d1f73c06cebc737bdaa4e6a64736f6c63430005090032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638f32d59b1161005b5780638f32d59b1461015f578063ea13d8a11461017b578063f00065b6146101a9578063f2fde38b146101d757610088565b80631a0020d61461008d578063715018a6146101035780637f604b451461010d5780638da5cb5b1461013b575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b03166101fd565b60408051602080825283518183015283519192839290830191858101910280838360005b838110156100ef5781810151838201526020016100d7565b505050509050019250505060405180910390f35b61010b610273565b005b61010b6004803603604081101561012357600080fd5b506001600160a01b0381358116916020013516610304565b6101436103aa565b604080516001600160a01b039092168252519081900360200190f35b6101676103b9565b604080519115158252519081900360200190f35b6101676004803603604081101561019157600080fd5b506001600160a01b03813581169160200135166103ca565b61010b600480360360408110156101bf57600080fd5b506001600160a01b03813581169160200135166103f9565b61010b600480360360208110156101ed57600080fd5b50356001600160a01b0316610472565b6001600160a01b03811660009081526001602090815260409182902080548351818402810184019094528084526060939283018282801561026757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610249575b50505050509050919050565b61027b6103b9565b6102ba576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b61030c6103b9565b61034b576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6001600160a01b039081166000818152600160208181526040808420805480850182559085528285200180546001600160a01b03191697909616968717909555928252600283528382209482529390915220805460ff19169091179055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6001600160a01b0380821660009081526002602090815260408083209386168352929052205460ff1692915050565b6104016103b9565b610440576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6001600160a01b039081166000908152600260209081526040808320949093168252929092529020805460ff19169055565b61047a6103b9565b6104b9576040805162461bcd60e51b8152602060048201819052602482015260008051602061058c833981519152604482015290519081900360640190fd5b6104c2816104c5565b50565b6001600160a01b03811661050a5760405162461bcd60e51b81526004018080602001828103825260268152602001806105666026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b039290921691909117905556fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572a265627a7a72305820544ff89e36c078334a56b52725f12b00abce64f96d1f73c06cebc737bdaa4e6a64736f6c63430005090032",
  "sourceMap": "227:1990:5:-;;;;;657:6:24;:19;;-1:-1:-1;;;;;;657:19:24;666:10;657:19;;;;-1:-1:-1;;;;;724:6:24;;691:40;;657:6;;691:40;227:1990:5;;;;;;",
  "deployedSourceMap": "227:1990:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;227:1990:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2089:126;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2089:126:5;-1:-1:-1;;;;;2089:126:5;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2089:126:5;;;;;;;;;;;;;;;;;1599:137:24;;;:::i;:::-;;680:180:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;680:180:5;;;;;;;;;;:::i;814:77:24:-;;;:::i;:::-;;;;-1:-1:-1;;;;;814:77:24;;;;;;;;;;;;;;1165:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;1410:150:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1410:150:5;;;;;;;;;;:::i;1055:138::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1055:138:5;;;;;;;;;;:::i;1885:107:24:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1885:107:24;-1:-1:-1;;;;;1885:107:24;;:::i;2089:126:5:-;-1:-1:-1;;;;;2188:20:5;;;;;;:12;:20;;;;;;;;;2181:27;;;;;;;;;;;;;;;;;2153:16;;2181:27;;;2188:20;2181:27;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2181:27:5;;;;;;;;;;;;;;;;;;;;;;;2089:126;;;:::o;1599:137:24:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:24;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1010:54:24;;;;;;;;;;;;;;;1697:1;1681:6;;1660:40;;-1:-1:-1;;;;;1681:6:24;;;;1660:40;;1697:1;;1660:40;1727:1;1710:19;;-1:-1:-1;;;;;;1710:19:24;;;1599:137::o;680:180:5:-;1018:9:24;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:24;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1010:54:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;765:20:5;;;;;;;:12;:20;;;;;;;;27:10:-1;;23:18;;;45:23;;765:36:5;;;;;;;;;-1:-1:-1;;;;;;765:36:5;;;;;;;;;;;811:24;;;:16;:24;;;;;:35;;;;;;;;:42;;-1:-1:-1;;811:42:5;;;;;;680:180::o;814:77:24:-;852:7;878:6;-1:-1:-1;;;;;878:6:24;814:77;:::o;1165:90::-;1205:4;1242:6;-1:-1:-1;;;;;1242:6:24;1228:10;:20;;1165:90::o;1410:150:5:-;-1:-1:-1;;;;;1518:24:5;;;1495:4;1518:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;1410:150;;;;:::o;1055:138::-;1018:9:24;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:24;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1010:54:24;;;;;;;;;;;;;;;-1:-1:-1;;;;;1143:24:5;;;1181:5;1143:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;:43;;-1:-1:-1;;1143:43:5;;;1055:138::o;1885:107:24:-;1018:9;:7;:9::i;:::-;1010:54;;;;;-1:-1:-1;;;1010:54:24;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1010:54:24;;;;;;;;;;;;;;;1957:28;1976:8;1957:18;:28::i;:::-;1885:107;:::o;2093:225::-;-1:-1:-1;;;;;2166:22:24;;2158:73;;;;-1:-1:-1;;;2158:73:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2267:6;;;2246:38;;-1:-1:-1;;;;;2246:38:24;;;;2267:6;;;2246:38;;;2294:6;:17;;-1:-1:-1;;;;;;2294:17:24;-1:-1:-1;;;;;2294:17:24;;;;;;;;;;2093:225::o",
  "source": "pragma solidity ^0.5.9;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\n\n/// @title Cash36 Exchanges Contract\n/// @notice Is responsible for keeping track of all registered Exchanges.\n/// @author element36.io\ncontract Cash36Exchanges is Ownable {\n\n    // Whitelisted Exchanges per token\n    mapping(address => address[]) private allExchanges;\n    mapping(address => mapping(address => bool)) private allowedExchanges;\n\n    /**\n     * @notice Add an exchange to the list of accepted Exchanges\n     * @dev Exchange can not be another Smart Contract\n     * @dev onlyOwner - only open to element36 Account\n     * @param _exchange Address of the exchange\n     */\n    function addExchange(address _exchange, address _token) external onlyOwner {\n        allExchanges[_token].push(_exchange);\n        allowedExchanges[_token][_exchange] = true;\n    }\n\n    /**\n     * @notice Remove an exchange from the list of accepted Exchanges\n     * @dev onlyOwner - only open to element36 Account\n     * @param _exchange Address of the exchange\n     */\n    function removeExchange(address _exchange, address _token) external onlyOwner {\n        allowedExchanges[_token][_exchange] = false;\n    }\n\n    /**\n     * @notice Check if an exchange is on the list of accepted Exchanges\n     * @param _exchange Address of the exchange\n     * @return {\n     *   \"bool\": \"true when Exchange is listed\"\n     * }\n     */\n    function isAllowedExchange(address _exchange, address _token) external view returns (bool) {\n        return allowedExchanges[_token][_exchange];\n    }\n\n    /**\n     * @notice Returns all registered exchange addresses for a given token address.\n     * @dev Note: Due to limitations of solidity, this method returns the full list of every address ever registered.\n     * @dev It does not consider exchanges, which might have been flagged false afterwards.\n     * @dev Therefore to be sure, an additional call to isAllowedExchange, would be necessary.\n     * @param _token Address of the token\n     * @return {\n     *   \"address[]\": List of address of exchanges\n     * }\n    */\n    function getAllExchanges(address _token) external view returns (address[] memory) {\n        return allExchanges[_token];\n    }\n}\n",
  "sourcePath": "/Users/bum/element36/dev/cash36/contracts/contracts/Cash36Exchanges.sol",
  "ast": {
    "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/Cash36Exchanges.sol",
    "exportedSymbols": {
      "Cash36Exchanges": [
        1031
      ]
    },
    "id": 1032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 944,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 945,
        "nodeType": "ImportDirective",
        "scope": 1032,
        "sourceUnit": 2967,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 946,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2966,
              "src": "255:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2966",
                "typeString": "contract Ownable"
              }
            },
            "id": 947,
            "nodeType": "InheritanceSpecifier",
            "src": "255:7:5"
          }
        ],
        "contractDependencies": [
          2966
        ],
        "contractKind": "contract",
        "documentation": "@title Cash36 Exchanges Contract\n @notice Is responsible for keeping track of all registered Exchanges.\n @author element36.io",
        "fullyImplemented": true,
        "id": 1031,
        "linearizedBaseContracts": [
          1031,
          2966
        ],
        "name": "Cash36Exchanges",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 952,
            "name": "allExchanges",
            "nodeType": "VariableDeclaration",
            "scope": 1031,
            "src": "309:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 951,
              "keyType": {
                "id": 948,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "309:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 950,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "328:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 958,
            "name": "allowedExchanges",
            "nodeType": "VariableDeclaration",
            "scope": 1031,
            "src": "365:69:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 957,
              "keyType": {
                "id": 953,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 956,
                "keyType": {
                  "id": 954,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 955,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "755:105:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "791:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 967,
                          "name": "allExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "765:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 969,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 968,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "778:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "765:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "765:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 973,
                  "nodeType": "ExpressionStatement",
                  "src": "765:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "allowedExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "811:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 977,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 975,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "828:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "811:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 978,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "836:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "811:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "849:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "811:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "811:42:5"
                }
              ]
            },
            "documentation": "@notice Add an exchange to the list of accepted Exchanges\n@dev Exchange can not be another Smart Contract\n@dev onlyOwner - only open to element36 Account\n@param _exchange Address of the exchange",
            "id": 983,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 964,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2899,
                  "src": "745:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "745:9:5"
              }
            ],
            "name": "addExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "701:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 962,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "720:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "700:35:5"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:0:5"
            },
            "scope": 1031,
            "src": "680:180:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "1133:60:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 992,
                          "name": "allowedExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "1143:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 995,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 993,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "1160:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1143:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 996,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "1168:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1143:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1143:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:43:5"
                }
              ]
            },
            "documentation": "@notice Remove an exchange from the list of accepted Exchanges\n@dev onlyOwner - only open to element36 Account\n@param _exchange Address of the exchange",
            "id": 1001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 990,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 989,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2899,
                  "src": "1123:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1123:9:5"
              }
            ],
            "name": "removeExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1079:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1098:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:35:5"
            },
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:5"
            },
            "scope": 1031,
            "src": "1055:138:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "1501:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1010,
                        "name": "allowedExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "1518:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1012,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1011,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "1535:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1518:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1014,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1013,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "1543:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1518:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "1511:42:5"
                }
              ]
            },
            "documentation": "@notice Check if an exchange is on the list of accepted Exchanges\n@param _exchange Address of the exchange\n@return {\n  \"bool\": \"true when Exchange is listed\"\n}",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1437:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1456:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1436:35:5"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1495:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:6:5"
            },
            "scope": 1031,
            "src": "1410:150:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "2171:44:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1025,
                      "name": "allExchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "2188:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1027,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1026,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "2201:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2188:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1024,
                  "id": 1028,
                  "nodeType": "Return",
                  "src": "2181:27:5"
                }
              ]
            },
            "documentation": "@notice Returns all registered exchange addresses for a given token address.\n@dev Note: Due to limitations of solidity, this method returns the full list of every address ever registered.\n@dev It does not consider exchanges, which might have been flagged false afterwards.\n@dev Therefore to be sure, an additional call to isAllowedExchange, would be necessary.\n@param _token Address of the token\n@return {\n  \"address[]\": List of address of exchanges\n}",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllExchanges",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2114:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2113:16:5"
            },
            "returnParameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2153:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1021,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2153:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1022,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2153:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2152:18:5"
            },
            "scope": 1031,
            "src": "2089:126:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1032,
        "src": "227:1990:5"
      }
    ],
    "src": "0:2218:5"
  },
  "legacyAST": {
    "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/Cash36Exchanges.sol",
    "exportedSymbols": {
      "Cash36Exchanges": [
        1031
      ]
    },
    "id": 1032,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 944,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 945,
        "nodeType": "ImportDirective",
        "scope": 1032,
        "sourceUnit": 2967,
        "src": "25:63:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 946,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2966,
              "src": "255:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$2966",
                "typeString": "contract Ownable"
              }
            },
            "id": 947,
            "nodeType": "InheritanceSpecifier",
            "src": "255:7:5"
          }
        ],
        "contractDependencies": [
          2966
        ],
        "contractKind": "contract",
        "documentation": "@title Cash36 Exchanges Contract\n @notice Is responsible for keeping track of all registered Exchanges.\n @author element36.io",
        "fullyImplemented": true,
        "id": 1031,
        "linearizedBaseContracts": [
          1031,
          2966
        ],
        "name": "Cash36Exchanges",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 952,
            "name": "allExchanges",
            "nodeType": "VariableDeclaration",
            "scope": 1031,
            "src": "309:50:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
              "typeString": "mapping(address => address[])"
            },
            "typeName": {
              "id": 951,
              "keyType": {
                "id": 948,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "317:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "309:29:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                "typeString": "mapping(address => address[])"
              },
              "valueType": {
                "baseType": {
                  "id": 949,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "328:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "id": 950,
                "length": null,
                "nodeType": "ArrayTypeName",
                "src": "328:9:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                  "typeString": "address[]"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 958,
            "name": "allowedExchanges",
            "nodeType": "VariableDeclaration",
            "scope": 1031,
            "src": "365:69:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
              "typeString": "mapping(address => mapping(address => bool))"
            },
            "typeName": {
              "id": 957,
              "keyType": {
                "id": 953,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "373:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "365:44:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                "typeString": "mapping(address => mapping(address => bool))"
              },
              "valueType": {
                "id": 956,
                "keyType": {
                  "id": 954,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "392:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "384:24:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                  "typeString": "mapping(address => bool)"
                },
                "valueType": {
                  "id": 955,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:4:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "755:105:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 971,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "791:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 967,
                          "name": "allExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 952,
                          "src": "765:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 969,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 968,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "778:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "765:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "765:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 972,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "765:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 973,
                  "nodeType": "ExpressionStatement",
                  "src": "765:36:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 980,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 974,
                          "name": "allowedExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "811:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 977,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 975,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "828:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "811:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 978,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 976,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 960,
                        "src": "836:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "811:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 979,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "849:4:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "811:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 981,
                  "nodeType": "ExpressionStatement",
                  "src": "811:42:5"
                }
              ]
            },
            "documentation": "@notice Add an exchange to the list of accepted Exchanges\n@dev Exchange can not be another Smart Contract\n@dev onlyOwner - only open to element36 Account\n@param _exchange Address of the exchange",
            "id": 983,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 965,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 964,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2899,
                  "src": "745:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "745:9:5"
              }
            ],
            "name": "addExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 960,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "701:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 959,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 962,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "720:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 961,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "720:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "700:35:5"
            },
            "returnParameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "755:0:5"
            },
            "scope": 1031,
            "src": "680:180:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "1133:60:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 992,
                          "name": "allowedExchanges",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 958,
                          "src": "1143:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                            "typeString": "mapping(address => mapping(address => bool))"
                          }
                        },
                        "id": 995,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 993,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 987,
                          "src": "1160:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1143:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 996,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 994,
                        "name": "_exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "1168:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1143:35:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 997,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1181:5:5",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1143:43:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "1143:43:5"
                }
              ]
            },
            "documentation": "@notice Remove an exchange from the list of accepted Exchanges\n@dev onlyOwner - only open to element36 Account\n@param _exchange Address of the exchange",
            "id": 1001,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 990,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 989,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2899,
                  "src": "1123:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1123:9:5"
              }
            ],
            "name": "removeExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1079:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1079:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 987,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "1098:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1078:35:5"
            },
            "returnParameters": {
              "id": 991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1133:0:5"
            },
            "scope": 1031,
            "src": "1055:138:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1016,
              "nodeType": "Block",
              "src": "1501:59:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 1010,
                        "name": "allowedExchanges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 958,
                        "src": "1518:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
                          "typeString": "mapping(address => mapping(address => bool))"
                        }
                      },
                      "id": 1012,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 1011,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "1535:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1518:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 1014,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1013,
                      "name": "_exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1003,
                      "src": "1543:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1518:35:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1009,
                  "id": 1015,
                  "nodeType": "Return",
                  "src": "1511:42:5"
                }
              ]
            },
            "documentation": "@notice Check if an exchange is on the list of accepted Exchanges\n@param _exchange Address of the exchange\n@return {\n  \"bool\": \"true when Exchange is listed\"\n}",
            "id": 1017,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isAllowedExchange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1003,
                  "name": "_exchange",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1437:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1437:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1005,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1456:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1456:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1436:35:5"
            },
            "returnParameters": {
              "id": 1009,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1017,
                  "src": "1495:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:6:5"
            },
            "scope": 1031,
            "src": "1410:150:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1029,
              "nodeType": "Block",
              "src": "2171:44:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 1025,
                      "name": "allExchanges",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 952,
                      "src": "2188:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 1027,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 1026,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "2201:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2188:20:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1024,
                  "id": 1028,
                  "nodeType": "Return",
                  "src": "2181:27:5"
                }
              ]
            },
            "documentation": "@notice Returns all registered exchange addresses for a given token address.\n@dev Note: Due to limitations of solidity, this method returns the full list of every address ever registered.\n@dev It does not consider exchanges, which might have been flagged false afterwards.\n@dev Therefore to be sure, an additional call to isAllowedExchange, would be necessary.\n@param _token Address of the token\n@return {\n  \"address[]\": List of address of exchanges\n}",
            "id": 1030,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAllExchanges",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1020,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1019,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2114:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1018,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2113:16:5"
            },
            "returnParameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1023,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1030,
                  "src": "2153:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1021,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2153:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1022,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "2153:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2152:18:5"
            },
            "scope": 1031,
            "src": "2089:126:5",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 1032,
        "src": "227:1990:5"
      }
    ],
    "src": "0:2218:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {
    "85458545": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x2b26f23405e0fB422Cb908168916F7B794124ECd",
      "transactionHash": "0xe69d948390bcdb4d50706e6a357df6599c5643969d4bf9cf230bf15bfe6f92a1"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-05T12:05:06.816Z",
  "devdoc": {
    "author": "element36.io",
    "methods": {
      "addExchange(address,address)": {
        "details": "Exchange can not be another Smart ContractonlyOwner - only open to element36 Account",
        "params": {
          "_exchange": "Address of the exchange"
        }
      },
      "getAllExchanges(address)": {
        "details": "Note: Due to limitations of solidity, this method returns the full list of every address ever registered.It does not consider exchanges, which might have been flagged false afterwards.Therefore to be sure, an additional call to isAllowedExchange, would be necessary.",
        "params": {
          "_token": "Address of the token"
        },
        "return": "{  \"address[]\": List of address of exchanges }"
      },
      "isAllowedExchange(address,address)": {
        "params": {
          "_exchange": "Address of the exchange"
        },
        "return": "{  \"bool\": \"true when Exchange is listed\" }"
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeExchange(address,address)": {
        "details": "onlyOwner - only open to element36 Account",
        "params": {
          "_exchange": "Address of the exchange"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * > Note: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Cash36 Exchanges Contract"
  },
  "userdoc": {
    "methods": {
      "addExchange(address,address)": {
        "notice": "Add an exchange to the list of accepted Exchanges"
      },
      "getAllExchanges(address)": {
        "notice": "Returns all registered exchange addresses for a given token address."
      },
      "isAllowedExchange(address,address)": {
        "notice": "Check if an exchange is on the list of accepted Exchanges"
      },
      "removeExchange(address,address)": {
        "notice": "Remove an exchange from the list of accepted Exchanges"
      }
    },
    "notice": "Is responsible for keeping track of all registered Exchanges."
  }
}