{
  "contractName": "GBP36",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newController",
          "type": "address"
        }
      ],
      "name": "changeController",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renouncePauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        },
        {
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getInitializationBlock",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newCap",
          "type": "uint256"
        }
      ],
      "name": "updateCap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "controller",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "burner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newController\",\"type\":\"address\"}],\"name\":\"changeController\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renouncePauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getInitializationBlock\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newCap\",\"type\":\"uint256\"}],\"name\":\"updateCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"controller\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"burner\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}],\"devdoc\":{\"author\":\"element36.io\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Function to check the amount of tokens that an owner allowed to a spender.\",\"params\":{\"owner\":\"address The address which owns the funds.\",\"spender\":\"address The address which will spend the funds.\"},\"return\":\"A uint256 specifying the amount of tokens still available for the spender.\"},\"approve(address,uint256)\":{\"details\":\"Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"The address to query the balance of.\"},\"return\":\"A uint256 representing the amount owned by the passed address.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller.     * See `ERC20._burn`.\"},\"burnFrom(address,uint256)\":{\"details\":\"See `ERC20._burnFrom`.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"changeController(address)\":{\"details\":\"onlyController - only open to the currently assigned controller\",\"params\":{\"_newController\":\"The new controller of the contract\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"subtractedValue\":\"The amount of tokens to decrease the allowance by.\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.\",\"params\":{\"addedValue\":\"The amount of tokens to increase the allowance by.\",\"spender\":\"The address which will spend the funds.\"}},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"value\":\"The amount of tokens to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Total number of tokens in existence\"},\"transfer(address,uint256)\":{\"details\":\"Transfer token to a specified address\",\"params\":{\"to\":\"The address to transfer to.\",\"value\":\"The amount to be transferred.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.\",\"params\":{\"from\":\"address The address which you want to send tokens from\",\"to\":\"address The address which you want to transfer to\",\"value\":\"uint256 the amount of tokens to be transferred\"}},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"},\"updateCap(uint256)\":{\"details\":\"Set a new cap for the token\",\"params\":{\"newCap\":\"The new cap for the token\"}}},\"title\":\"GBP36 Token Contract\"},\"userdoc\":{\"methods\":{\"changeController(address)\":{\"notice\":\"Changes the controller of the contract\"},\"getInitializationBlock()\":{\"notice\":\"@return Block number in which the contract was initialized\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/bum/element36/dev/cash36/contracts/contracts/GBP36/GBP36.sol\":\"GBP36\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/bum/element36/dev/cash36/contracts/contracts/Controlled.sol\":{\"keccak256\":\"0xf047b52188243b0aa101d363911e90a14c577fbb76d16405e3ab629f999e389c\",\"urls\":[\"bzzr://b7d9b672c2980f33aa8ef32203aaf18e8d83c843c3647efd2374978e9e667b4f\",\"dweb:/ipfs/QmNzsnPbmPvFwLvhcUm5CJpHo7XEp3NPJJiGLyJWkSPeBz\"]},\"/Users/bum/element36/dev/cash36/contracts/contracts/GBP36/GBP36.sol\":{\"keccak256\":\"0x8a10a6816eccdbb534a4c9dfbe563d30f4f4b160f7839743a96b7434496576d3\",\"urls\":[\"bzzr://8b18bb24a24df37b92da1e76d039d7505ab1defb7f9c8a9d89d5bcec4a64624b\",\"dweb:/ipfs/QmWbZHn2NZiAdzftC8BSiEQnC4jiehjq7fzaGtwMLs5WVG\"]},\"/Users/bum/element36/dev/cash36/contracts/contracts/IToken36Controller.sol\":{\"keccak256\":\"0x39cbd7942fab7ab2c8ca643b738d05c64f18960b01e6db077043cc4836c871da\",\"urls\":[\"bzzr://10a0d8d9bd2fddd34c8779d46f6098a7d3b6f1954c361665338ac8d38abc5bfb\",\"dweb:/ipfs/QmVTz8DybUghWd9ik8A3h2xco537BqCNj33XiJYgCsmvsw\"]},\"/Users/bum/element36/dev/cash36/contracts/contracts/Initializable.sol\":{\"keccak256\":\"0x60cf064ca310cfb17e0f395ce5147269e35f9ff8f19a92ccad7066f7b214e734\",\"urls\":[\"bzzr://566de414eaa031ca83b3a0a51fcb34f96ec9037a1758de8824db30e9b889eb28\",\"dweb:/ipfs/QmNaXDPKcahpjN8HZUubAsgKJPiRRVoitDiDjee9PfvAFJ\"]},\"/Users/bum/element36/dev/cash36/contracts/contracts/Token36.sol\":{\"keccak256\":\"0x73a99e4dfe3128fa3fa1003dfe86300a5342d2821e901fedaee421e968493695\",\"urls\":[\"bzzr://974584f6039a92831b99591fd6724bba72cfd24ad35490467626d192924f515b\",\"dweb:/ipfs/QmPwW2CGCDoMADehg6Mau8xzdqyzkk7u6jKqHBDvQLArkh\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzzr://bd34c1ce05b5b2b3a62fc02e160f6805b1cadd476854664f433c685b2fda8dad\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/PauserRole.sol\":{\"keccak256\":\"0xf6826c684d51ca28db5293ce11a54c5cca1c757b6cd32b87613833c65086f995\",\"urls\":[\"bzzr://01b2756ab5b41b1d7ccadfeac53fbdce9c889263f1e011329c300c5fa3fda65f\",\"dweb:/ipfs/QmTJQMxPH9ZqzKnaHY2ZDuumL2VQsky5MWkoqoFqHLBomq\"]},\"openzeppelin-solidity/contracts/lifecycle/Pausable.sol\":{\"keccak256\":\"0x609f8cb524cd6b502624c79c099ec2fc6f23eef57b5c38e28efd82490875f37e\",\"urls\":[\"bzzr://46ee461a64298ef418bd100df1301355f4dc9ffeb06fe7a39aaf98d45c0bf988\",\"dweb:/ipfs/QmYeYyKmfvg392XU1k82ZjW11HDqJWFN9AmW2n9LuRDWaw\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\",\"dweb:/ipfs/QmV3yVktya1s617QmuzQR2CfuJgUi3dR2xEZY9ecmqZ2G1\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\":{\"keccak256\":\"0xc61b3603089b09a730d8ca72e9133a496cc4405da40e9b87c12f073245d774bf\",\"urls\":[\"bzzr://f280f38d5ab6e1b89fd898ccd3901054a56572c141d91d30302e2db1db4cc6ff\",\"dweb:/ipfs/QmbtwNwAJEehWWL7yGGyyMoenQvcqtz91pqLgQPpLRoLYC\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x90e8c2521653bbb1768b05889c5760031e688d9cd361f167489b89215e201b95\",\"urls\":[\"bzzr://aa8b45b57edafc3d67bc5d916327ea16807fae33f753ca163ae0c4061b789766\",\"dweb:/ipfs/QmP5NaEwZthQeM2ESz4WTT3osrP7jhbvu7ocbttBi2JAw6\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600e81526020017f4272697469736820506f756e64730000000000000000000000000000000000008152506040518060400160405280600581526020017f474250333600000000000000000000000000000000000000000000000000000081525060126969e10de76676d08000008383838260009080519060200190620000a69291906200038b565b508151620000bc9060019060208501906200038b565b506002805460ff191660ff9290921691909117905550620000df90503362000182565b600580546001600160a81b0319166101003302179055806200016257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f6361702063616e6e6f7420626520300000000000000000000000000000000000604482015290519081900360640190fd5b620001756001600160e01b03620001d416565b600955506200042d915050565b6200019d8160046200025c60201b620017011790919060201c565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b600354156200024457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f616c726561647920696e697469616c697a656400000000000000000000000000604482015290519081900360640190fd5b620002576001600160e01b036200030316565b600355565b6200027182826001600160e01b036200030816565b15620002de57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b435b90565b60006001600160a01b0382166200036b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018062001cd46022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620003ce57805160ff1916838001178555620003fe565b82800160010185558215620003fe579182015b82811115620003fe578251825591602001919060010190620003e1565b506200040c92915062000410565b5090565b6200030591905b808211156200040c576000815560010162000417565b611897806200043d6000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80635c975abb116100de5780638b3dd74911610097578063a7d6889611610071578063a7d6889614610442578063a9059cbb1461045f578063dd62ed3e1461048b578063f77c4791146104b957610173565b80638b3dd7491461040657806395d89b411461040e578063a457c2d71461041657610173565b80635c975abb146103765780636ef8d66d1461037e57806370a082311461038657806379cc6790146103ac57806382dc1ec4146103d85780638456cb59146103fe57610173565b8063395093511161013057806339509351146102ab5780633cebb823146102d75780633f4ba83a146102ff57806340c10f191461030757806342966c681461033357806346fbf68e1461035057610173565b806306fdde0314610178578063095ea7b3146101f557806318160ddd1461023557806323b872dd1461024f578063313ce56714610285578063355274ea146102a3575b600080fd5b6101806104dd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102216004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610573565b604080519115158252519081900360200190f35b61023d6105d5565b60408051918252519081900360200190f35b6102216004803603606081101561026557600080fd5b506001600160a01b038135811691602081013590911690604001356105db565b61028d610773565b6040805160ff9092168252519081900360200190f35b61023d61077c565b610221600480360360408110156102c157600080fd5b506001600160a01b038135169060200135610782565b6102fd600480360360208110156102ed57600080fd5b50356001600160a01b031661080b565b005b6102fd610881565b6102216004803603604081101561031d57600080fd5b506001600160a01b038135169060200135610952565b6102fd6004803603602081101561034957600080fd5b50356109f8565b6102216004803603602081101561036657600080fd5b50356001600160a01b0316610a05565b610221610a1e565b6102fd610a27565b61023d6004803603602081101561039c57600080fd5b50356001600160a01b0316610a32565b6102fd600480360360408110156103c257600080fd5b506001600160a01b038135169060200135610a4d565b6102fd600480360360208110156103ee57600080fd5b50356001600160a01b0316610a5b565b6102fd610aa8565b61023d610b79565b610180610b7f565b6102216004803603604081101561042c57600080fd5b506001600160a01b038135169060200135610bdf565b6102fd6004803603602081101561045857600080fd5b5035610c68565b6102216004803603604081101561047557600080fd5b506001600160a01b038135169060200135610cbb565b61023d600480360360408110156104a157600080fd5b506001600160a01b0381358116916020013516610de0565b6104c1610e0b565b604080516001600160a01b039092168252519081900360200190f35b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050505050905090565b60055460009060ff16156105c1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105cc338484610e1f565b50600192915050565b60085490565b60055460009060ff1615610629576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81526001600160a01b038781166004830152868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b505115156001146106f75760405162461bcd60e51b815260040180806020018281038252602781526020018061183c6027913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461075e57610719848484610f27565b6001600160a01b038416600090815260076020908152604080832033808552925290912054610759918691610754908663ffffffff61103416565b610e1f565b610769565b610769848484610f27565b5060019392505050565b60025460ff1690565b60095490565b60055460009060ff16156107d0576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b03881684529091529020546105cc91908590610754908663ffffffff61109116565b60055461010090046001600160a01b031633146108595760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b61088a33610a05565b6108c55760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b60055460ff16610913576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6005805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60055460009061010090046001600160a01b031633146109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b60055460ff16156109ee576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105cc83836110f2565b610a02338261123f565b50565b6000610a1860048363ffffffff61142616565b92915050565b60055460ff1690565b610a303361148d565b565b6001600160a01b031660009081526006602052604090205490565b610a5782826114d5565b5050565b610a6433610a05565b610a9f5760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b610a0281611652565b610ab133610a05565b610aec5760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b60055460ff1615610b37576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60035490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105695780601f1061053e57610100808354040283529160200191610569565b60055460009060ff1615610c2d576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b03881684529091529020546105cc91908590610754908663ffffffff61103416565b60055461010090046001600160a01b03163314610cb65760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b600955565b60055460009060ff1615610d09576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81523360048201526001600160a01b03868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d6020811015610d9357600080fd5b50511515600114610dd55760405162461bcd60e51b815260040180806020018281038252602781526020018061183c6027913960400191505060405180910390fd5b6105cc338484610f27565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b60055461010090046001600160a01b031690565b6001600160a01b038216610e72576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316610ec5576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03808416600081815260076020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610f7a576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316600090815260066020526040902054610fa3908263ffffffff61103416565b6001600160a01b038085166000908152600660205260408082209390935590841681522054610fd8908263ffffffff61109116565b6001600160a01b0380841660008181526006602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561108b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156110eb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216611145576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b600954611160826111546105d5565b9063ffffffff61109116565b11156111a8576040805162461bcd60e51b81526020600482015260126024820152711d1bdad95b8818d85c08195e18d95959195960721b604482015290519081900360640190fd5b6008546111bb908263ffffffff61109116565b6008556001600160a01b0382166000908152600660205260409020546111e7908263ffffffff61109116565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611292576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b1580156112e557600080fd5b505afa1580156112f9573d6000803e3d6000fd5b505050506040513d602081101561130f57600080fd5b505115156001146113515760405162461bcd60e51b81526004018080602001828103825260238152602001806118196023913960400191505060405180910390fd5b600854611364908263ffffffff61103416565b6008556001600160a01b038216600090815260066020526040902054611390908263ffffffff61103416565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36040805182815290516001600160a01b038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b60006001600160a01b03821661146d5760405162461bcd60e51b81526004018080602001828103825260228152602001806117f76022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61149e60048263ffffffff61169a16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6001600160a01b038216611528576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d60208110156115a557600080fd5b505115156001146115e75760405162461bcd60e51b81526004018080602001828103825260238152602001806118196023913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461164857611608828261123f565b6001600160a01b038216600090815260076020908152604080832033808552925290912054611643918491610754908563ffffffff61103416565b610a57565b610a57828261123f565b61166360048263ffffffff61170116565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6116a48282611426565b6116df5760405162461bcd60e51b81526004018080602001828103825260218152602001806117d66021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61170b8282611426565b1561175d576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe616363657373206e6f7420616c6c6f7765642c206f6e6c7920636f6e74726f6c6c6572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865206275726e546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865207472616e73666572a265627a7a723058208c33de038290fc9739bced670b382d15a893597caf41293290a2fd3bbc5e42eb64736f6c63430005090032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80635c975abb116100de5780638b3dd74911610097578063a7d6889611610071578063a7d6889614610442578063a9059cbb1461045f578063dd62ed3e1461048b578063f77c4791146104b957610173565b80638b3dd7491461040657806395d89b411461040e578063a457c2d71461041657610173565b80635c975abb146103765780636ef8d66d1461037e57806370a082311461038657806379cc6790146103ac57806382dc1ec4146103d85780638456cb59146103fe57610173565b8063395093511161013057806339509351146102ab5780633cebb823146102d75780633f4ba83a146102ff57806340c10f191461030757806342966c681461033357806346fbf68e1461035057610173565b806306fdde0314610178578063095ea7b3146101f557806318160ddd1461023557806323b872dd1461024f578063313ce56714610285578063355274ea146102a3575b600080fd5b6101806104dd565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101ba5781810151838201526020016101a2565b50505050905090810190601f1680156101e75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102216004803603604081101561020b57600080fd5b506001600160a01b038135169060200135610573565b604080519115158252519081900360200190f35b61023d6105d5565b60408051918252519081900360200190f35b6102216004803603606081101561026557600080fd5b506001600160a01b038135811691602081013590911690604001356105db565b61028d610773565b6040805160ff9092168252519081900360200190f35b61023d61077c565b610221600480360360408110156102c157600080fd5b506001600160a01b038135169060200135610782565b6102fd600480360360208110156102ed57600080fd5b50356001600160a01b031661080b565b005b6102fd610881565b6102216004803603604081101561031d57600080fd5b506001600160a01b038135169060200135610952565b6102fd6004803603602081101561034957600080fd5b50356109f8565b6102216004803603602081101561036657600080fd5b50356001600160a01b0316610a05565b610221610a1e565b6102fd610a27565b61023d6004803603602081101561039c57600080fd5b50356001600160a01b0316610a32565b6102fd600480360360408110156103c257600080fd5b506001600160a01b038135169060200135610a4d565b6102fd600480360360208110156103ee57600080fd5b50356001600160a01b0316610a5b565b6102fd610aa8565b61023d610b79565b610180610b7f565b6102216004803603604081101561042c57600080fd5b506001600160a01b038135169060200135610bdf565b6102fd6004803603602081101561045857600080fd5b5035610c68565b6102216004803603604081101561047557600080fd5b506001600160a01b038135169060200135610cbb565b61023d600480360360408110156104a157600080fd5b506001600160a01b0381358116916020013516610de0565b6104c1610e0b565b604080516001600160a01b039092168252519081900360200190f35b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105695780601f1061053e57610100808354040283529160200191610569565b820191906000526020600020905b81548152906001019060200180831161054c57829003601f168201915b5050505050905090565b60055460009060ff16156105c1576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105cc338484610e1f565b50600192915050565b60085490565b60055460009060ff1615610629576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81526001600160a01b038781166004830152868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b15801561068b57600080fd5b505afa15801561069f573d6000803e3d6000fd5b505050506040513d60208110156106b557600080fd5b505115156001146106f75760405162461bcd60e51b815260040180806020018281038252602781526020018061183c6027913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461075e57610719848484610f27565b6001600160a01b038416600090815260076020908152604080832033808552925290912054610759918691610754908663ffffffff61103416565b610e1f565b610769565b610769848484610f27565b5060019392505050565b60025460ff1690565b60095490565b60055460009060ff16156107d0576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b03881684529091529020546105cc91908590610754908663ffffffff61109116565b60055461010090046001600160a01b031633146108595760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b61088a33610a05565b6108c55760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b60055460ff16610913576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6005805460ff191690556040805133815290517f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa9181900360200190a1565b60055460009061010090046001600160a01b031633146109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b60055460ff16156109ee576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6105cc83836110f2565b610a02338261123f565b50565b6000610a1860048363ffffffff61142616565b92915050565b60055460ff1690565b610a303361148d565b565b6001600160a01b031660009081526006602052604090205490565b610a5782826114d5565b5050565b610a6433610a05565b610a9f5760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b610a0281611652565b610ab133610a05565b610aec5760405162461bcd60e51b81526004018080602001828103825260308152602001806117a66030913960400191505060405180910390fd5b60055460ff1615610b37576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6005805460ff191660011790556040805133815290517f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2589181900360200190a1565b60035490565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105695780601f1061053e57610100808354040283529160200191610569565b60055460009060ff1615610c2d576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b3360008181526007602090815260408083206001600160a01b03881684529091529020546105cc91908590610754908663ffffffff61103416565b60055461010090046001600160a01b03163314610cb65760405162461bcd60e51b81526004018080602001828103825260238152602001806117836023913960400191505060405180910390fd5b600955565b60055460009060ff1615610d09576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b60055460408051634a39314960e01b81523360048201526001600160a01b03868116602483015260448201869052915161010090930490911691634a39314991606480820192602092909190829003018186803b158015610d6957600080fd5b505afa158015610d7d573d6000803e3d6000fd5b505050506040513d6020811015610d9357600080fd5b50511515600114610dd55760405162461bcd60e51b815260040180806020018281038252602781526020018061183c6027913960400191505060405180910390fd5b6105cc338484610f27565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b60055461010090046001600160a01b031690565b6001600160a01b038216610e72576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316610ec5576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b03808416600081815260076020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038216610f7a576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6001600160a01b038316600090815260066020526040902054610fa3908263ffffffff61103416565b6001600160a01b038085166000908152600660205260408082209390935590841681522054610fd8908263ffffffff61109116565b6001600160a01b0380841660008181526006602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282111561108b576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b6000828201838110156110eb576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216611145576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b600954611160826111546105d5565b9063ffffffff61109116565b11156111a8576040805162461bcd60e51b81526020600482015260126024820152711d1bdad95b8818d85c08195e18d95959195960721b604482015290519081900360640190fd5b6008546111bb908263ffffffff61109116565b6008556001600160a01b0382166000908152600660205260409020546111e7908263ffffffff61109116565b6001600160a01b03831660008181526006602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b038216611292576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b1580156112e557600080fd5b505afa1580156112f9573d6000803e3d6000fd5b505050506040513d602081101561130f57600080fd5b505115156001146113515760405162461bcd60e51b81526004018080602001828103825260238152602001806118196023913960400191505060405180910390fd5b600854611364908263ffffffff61103416565b6008556001600160a01b038216600090815260066020526040902054611390908263ffffffff61103416565b6001600160a01b0383166000818152600660209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a36040805182815290516001600160a01b038416917fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5919081900360200190a25050565b60006001600160a01b03821661146d5760405162461bcd60e51b81526004018080602001828103825260228152602001806117f76022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61149e60048263ffffffff61169a16565b6040516001600160a01b038216907fcd265ebaf09df2871cc7bd4133404a235ba12eff2041bb89d9c714a2621c7c7e90600090a250565b6001600160a01b038216611528576040805162461bcd60e51b81526020600482015260156024820152741859191c995cdcc80c081b9bdd08185b1b1bddd959605a1b604482015290519081900360640190fd5b6005546040805163147411a960e31b81526001600160a01b03858116600483015291516101009093049091169163a3a08d4891602480820192602092909190829003018186803b15801561157b57600080fd5b505afa15801561158f573d6000803e3d6000fd5b505050506040513d60208110156115a557600080fd5b505115156001146115e75760405162461bcd60e51b81526004018080602001828103825260238152602001806118196023913960400191505060405180910390fd5b60055461010090046001600160a01b0316331461164857611608828261123f565b6001600160a01b038216600090815260076020908152604080832033808552925290912054611643918491610754908563ffffffff61103416565b610a57565b610a57828261123f565b61166360048263ffffffff61170116565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b6116a48282611426565b6116df5760405162461bcd60e51b81526004018080602001828103825260218152602001806117d66021913960400191505060405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19169055565b61170b8282611426565b1561175d576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe616363657373206e6f7420616c6c6f7765642c206f6e6c7920636f6e74726f6c6c6572506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865206275726e546f6b656e3336436f6e74726f6c6c65722072656a656374656420746865207472616e73666572a265627a7a723058208c33de038290fc9739bced670b382d15a893597caf41293290a2fd3bbc5e42eb64736f6c63430005090032",
  "sourceMap": "111:246:9:-;;;271:84;8:9:-1;5:2;;;30:1;27;20:12;5:2;271:84:9;874:286:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;327:2:9;331:15;1011:4:14;1017:6;1025:8;512:4:27;504:5;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;526:16:27;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;552:9:27;:20;;-1:-1:-1;;552:20:27;;;;;;;;;;;;-1:-1:-1;275:22:21;;-1:-1:-1;286:10:21;275;:22::i;:::-;975:7:22;:15;;-1:-1:-1;;;;;;431:24:6;975:15:22;445:10:6;431:24;;;;1054:7:14;1046:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1092:13;-1:-1:-1;;;;;1092:11:14;:13;:::i;:::-;1143:4;:10;-1:-1:-1;111:246:9;;-1:-1:-1;;111:246:9;737:119:21;793:21;806:7;793:8;:12;;;;;;:21;;;;:::i;:::-;829:20;;-1:-1:-1;;;;;829:20:21;;;;;;;;737:119;:::o;753:96:13:-;252:19;;:24;244:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:16;-1:-1:-1;;;;;826:14:13;:16;:::i;:::-;804:19;:38;753:96::o;260:175:20:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:20;:18;:::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:20;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:20;424:4;401:27;;;260:175::o;917:94:13:-;992:12;917:94;;:::o;779:200:20:-;851:4;-1:-1:-1;;;;;875:21:20;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:20;:11;:20;;;;;;;;;;;;;;;779:200::o;111:246:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;111:246:9;;;-1:-1:-1;111:246:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "111:246:9:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;111:246:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;644:81:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3529:159:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3529:159:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;1230:89;;;:::i;:::-;;;;;;;;;;;;;;;;4151:580;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4151:580:14;;;;;;;;;;;;;;;;;:::i;1478:81:27:-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1394:73:14;;;:::i;5245:214::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5245:214:14;;;;;;;;:::i;771:117:6:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;771:117:6;-1:-1:-1;;;;;771:117:6;;:::i;:::-;;1852:115:22;;;:::i;6949:146:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;6949:146:14;;;;;;;;:::i;7908:79::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7908:79:14;;:::i;447:107:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;447:107:21;-1:-1:-1;;;;;447:107:21;;:::i;1092:76:22:-;;;:::i;656:75:21:-;;;:::i;1875:104:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1875:104:14;-1:-1:-1;;;;;1875:104:14;;:::i;8044:101::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8044:101:14;;;;;;;;:::i;560:90:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;560:90:21;-1:-1:-1;;;;;560:90:21;;:::i;1649:113:22:-;;;:::i;533:107:13:-;;;:::i;838:85:27:-;;;:::i;5978:224:14:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5978:224:14;;;;;;;;:::i;1576:87::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1576:87:14;;:::i;2606:287::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2606:287:14;;;;;;;;:::i;2310:129::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2310:129:14;;;;;;;;;;:::i;468:87:6:-;;;:::i;:::-;;;;-1:-1:-1;;;;;468:87:6;;;;;;;;;;;;;;644:81:27;713:5;706:12;;;;;;;;-1:-1:-1;;706:12:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;681:13;;706:12;;713:5;;706:12;;713:5;706:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;644:81;:::o;3529:159:14:-;1321:7:22;;3608:4:14;;1321:7:22;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;3624:36:14;3633:10;3645:7;3654:5;3624:8;:36::i;:::-;-1:-1:-1;3677:4:14;3529:159;;;;:::o;1230:89::-;1300:12;;1230:89;:::o;4151:580::-;1321:7:22;;4244:4:14;;1321:7:22;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;4287:11:14;;4268:59;;;-1:-1:-1;;;4268:59:14;;-1:-1:-1;;;;;4268:59:14;;;;;;;;;;;;;;;;;;;;;;4287:11;;;;;;;;4268:42;;:59;;;;;;;;;;;;;;;4287:11;4268:59;;;5:2:-1;;;;30:1;27;20:12;5:2;4268:59:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4268:59:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4268:59:14;:67;;4331:4;4268:67;4260:119;;;;-1:-1:-1;;;4260:119:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4504:11;;;;;-1:-1:-1;;;;;4504:11:14;4490:10;:25;4486:218;;4531:26;4541:4;4547:2;4551:5;4531:9;:26::i;:::-;-1:-1:-1;;;;;4598:14:14;;;;;;:8;:14;;;;;;;;4586:10;4598:26;;;;;;;;;4571:65;;4580:4;;4598:37;;4629:5;4598:37;:30;:37;:::i;:::-;4571:8;:65::i;:::-;4486:218;;;4667:26;4677:4;4683:2;4687:5;4667:9;:26::i;:::-;-1:-1:-1;4720:4:14;4151:580;;;;;:::o;1478:81:27:-;1543:9;;;;1478:81;:::o;1394:73:14:-;1456:4;;1394:73;:::o;5245:214::-;1321:7:22;;5339:4:14;;1321:7:22;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;5364:10:14;5385:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5385:29:14;;;;;;;;;;5355:76;;5364:10;5376:7;;5385:45;;5419:10;5385:45;:33;:45;:::i;771:117:6:-;306:11;;;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:11;:28;;-1:-1:-1;;;;;853:28:6;;;;;-1:-1:-1;;;;;;853:28:6;;;;;;;;;771:117::o;1852:115:22:-;350:20:21;359:10;350:8;:20::i;:::-;342:81;;;;-1:-1:-1;;;342:81:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1512:7:22;;;;1504:40;;;;;-1:-1:-1;;;1504:40:22;;;;;;;;;;;;-1:-1:-1;;;1504:40:22;;;;;;;;;;;;;;;1910:7;:15;;-1:-1:-1;;1910:15:22;;;1940:20;;;1949:10;1940:20;;;;;;;;;;;;;1852:115::o;6949:146:14:-;306:11:6;;7035:4:14;;306:11:6;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:7:22;;;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;7051:16:14;7057:2;7061:5;7051;:16::i;7908:79::-;7955:25;7961:10;7973:6;7955:5;:25::i;:::-;7908:79;:::o;447:107:21:-;503:4;526:21;:8;539:7;526:21;:12;:21;:::i;:::-;519:28;447:107;-1:-1:-1;;447:107:21:o;1092:76:22:-;1154:7;;;;1092:76;:::o;656:75:21:-;699:25;713:10;699:13;:25::i;:::-;656:75::o;1875:104:14:-;-1:-1:-1;;;;;1956:16:14;1930:7;1956:16;;;:9;:16;;;;;;;1875:104::o;8044:101::-;8112:26;8122:7;8131:6;8112:9;:26::i;:::-;8044:101;;:::o;560:90:21:-;350:20;359:10;350:8;:20::i;:::-;342:81;;;;-1:-1:-1;;;342:81:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;624:19;635:7;624:10;:19::i;1649:113:22:-;350:20:21;359:10;350:8;:20::i;:::-;342:81;;;;-1:-1:-1;;;342:81:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1321:7:22;;;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;1708:7;:14;;-1:-1:-1;;1708:14:22;1718:4;1708:14;;;1737:18;;;1744:10;1737:18;;;;;;;;;;;;;1649:113::o;533:107:13:-;614:19;;533:107;:::o;838:85:27:-;909:7;902:14;;;;;;;;-1:-1:-1;;902:14:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;877:13;;902:14;;909:7;;902:14;;909:7;902:14;;;;;;;;;;;;;;;;;;;;;;;;5978:224:14;1321:7:22;;6077:4:14;;1321:7:22;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;6102:10:14;6123:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;6123:29:14;;;;;;;;;;6093:81;;6102:10;6114:7;;6123:50;;6157:15;6123:50;:33;:50;:::i;1576:87::-;306:11:6;;;;;-1:-1:-1;;;;;306:11:6;292:10;:25;284:73;;;;-1:-1:-1;;;284:73:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1643:4:14;:13;1576:87::o;2606:287::-;1321:7:22;;2681:4:14;;1321:7:22;;1320:8;1312:37;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;-1:-1:-1;;;1312:37:22;;;;;;;;;;;;;;;2724:11:14;;2705:65;;;-1:-1:-1;;;2705:65:14;;2748:10;2705:65;;;;-1:-1:-1;;;;;2705:65:14;;;;;;;;;;;;;;;2724:11;;;;;;;;2705:42;;:65;;;;;;;;;;;;;;;2724:11;2705:65;;;5:2:-1;;;;30:1;27;20:12;5:2;2705:65:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2705:65:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2705:65:14;:73;;2774:4;2705:73;2697:125;;;;-1:-1:-1;;;2697:125:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2833:32;2843:10;2855:2;2859:5;2833:9;:32::i;2310:129::-;-1:-1:-1;;;;;2408:15:14;;;2382:7;2408:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;2310:129::o;468:87:6:-;537:11;;;;;-1:-1:-1;;;;;537:11:6;;468:87::o;10072:298:14:-;-1:-1:-1;;;;;10164:21:14;;10156:55;;;;;-1:-1:-1;;;10156:55:14;;;;;;;;;;;;-1:-1:-1;;;10156:55:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;10229:19:14;;10221:53;;;;;-1:-1:-1;;;10221:53:14;;;;;;;;;;;;-1:-1:-1;;;10221:53:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;10285:15:14;;;;;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;:32;;;10332:31;;;;;;;;;;;;;;;;;10072:298;;;:::o;6421:281::-;-1:-1:-1;;;;;6508:16:14;;6500:50;;;;;-1:-1:-1;;;6500:50:14;;;;;;;;;;;;-1:-1:-1;;;6500:50:14;;;;;;;;;;;;;;;-1:-1:-1;;;;;6579:15:14;;;;;;:9;:15;;;;;;:26;;6599:5;6579:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;6561:15:14;;;;;;;:9;:15;;;;;;:44;;;;6631:13;;;;;;;:24;;6649:5;6631:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;6615:13:14;;;;;;;:9;:13;;;;;;;;;:40;;;;6670:25;;;;;;;6615:13;;6670:25;;;;;;;;;;;;;6421:281;;;:::o;1274:179:23:-;1332:7;1364:1;1359;:6;;1351:49;;;;;-1:-1:-1;;;1351:49:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1422:5:23;;;1274:179::o;834:176::-;892:7;923:5;;;946:6;;;;938:46;;;;;-1:-1:-1;;;938:46:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;834:176;-1:-1:-1;;;834:176:23:o;7438:361:14:-;-1:-1:-1;;;;;7512:21:14;;7504:55;;;;;-1:-1:-1;;;7504:55:14;;;;;;;;;;;;-1:-1:-1;;;7504:55:14;;;;;;;;;;;;;;;7605:4;;7577:24;7595:5;7577:13;:11;:13::i;:::-;:17;:24;:17;:24;:::i;:::-;:32;;7569:63;;;;;-1:-1:-1;;;7569:63:14;;;;;;;;;;;;-1:-1:-1;;;7569:63:14;;;;;;;;;;;;;;;7658:12;;:23;;7675:5;7658:23;:16;:23;:::i;:::-;7643:12;:38;-1:-1:-1;;;;;7712:18:14;;;;;;:9;:18;;;;;;:29;;7735:5;7712:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;7691:18:14;;;;;;:9;:18;;;;;;;;:50;;;;7756:36;;;;;;;7691:18;;;;7756:36;;;;;;;;;;7438:361;;:::o;8371:489::-;-1:-1:-1;;;;;8445:21:14;;8437:55;;;;;-1:-1:-1;;;8437:55:14;;;;;;;;;;;;-1:-1:-1;;;8437:55:14;;;;;;;;;;;;;;;8529:11;;8510:47;;;-1:-1:-1;;;8510:47:14;;-1:-1:-1;;;;;8510:47:14;;;;;;;;;8529:11;;;;;;;;8510:38;;:47;;;;;;;;;;;;;;;8529:11;8510:47;;;5:2:-1;;;;30:1;27;20:12;5:2;8510:47:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8510:47:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;8510:47:14;:55;;8561:4;8510:55;8502:103;;;;-1:-1:-1;;;8502:103:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8631:12;;:23;;8648:5;8631:23;:16;:23;:::i;:::-;8616:12;:38;-1:-1:-1;;;;;8685:18:14;;;;;;:9;:18;;;;;;:29;;8708:5;8685:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;8664:18:14;;;;;;:9;:18;;;;;;;;:50;;;;8729:36;;;;;;;8664:18;;8729:36;;;;;;;;;;;8833:20;;;;;;;;-1:-1:-1;;;;;8833:20:14;;;;;;;;;;;;;8371:489;;:::o;779:200:20:-;851:4;-1:-1:-1;;;;;875:21:20;;867:68;;;;-1:-1:-1;;;867:68:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:20;:11;:20;;;;;;;;;;;;;;;779:200::o;862:127:21:-;921:24;:8;937:7;921:24;:15;:24;:::i;:::-;960:22;;-1:-1:-1;;;;;960:22:21;;;;;;;;862:127;:::o;9249:558:14:-;-1:-1:-1;;;;;9327:21:14;;9319:55;;;;;-1:-1:-1;;;9319:55:14;;;;;;;;;;;;-1:-1:-1;;;9319:55:14;;;;;;;;;;;;;;;9411:11;;9392:47;;;-1:-1:-1;;;9392:47:14;;-1:-1:-1;;;;;9392:47:14;;;;;;;;;9411:11;;;;;;;;9392:38;;:47;;;;;;;;;;;;;;;9411:11;9392:47;;;5:2:-1;;;;30:1;27;20:12;5:2;9392:47:14;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;9392:47:14;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9392:47:14;:55;;9443:4;9392:55;9384:103;;;;-1:-1:-1;;;9384:103:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9605:11;;;;;-1:-1:-1;;;;;9605:11:14;9591:10;:25;9587:214;;9632:21;9638:7;9647:5;9632;:21::i;:::-;-1:-1:-1;;;;;9697:17:14;;;;;;:8;:17;;;;;;;;9685:10;9697:29;;;;;;;;;9667:71;;9676:7;;9697:40;;9731:5;9697:40;:33;:40;:::i;9667:71::-;9587:214;;;9769:21;9775:7;9784:5;9769;:21::i;737:119:21:-;793:21;:8;806:7;793:21;:12;:21;:::i;:::-;829:20;;-1:-1:-1;;;;;829:20:21;;;;;;;;737:119;:::o;510:180:20:-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;-1:-1:-1;;;581:64:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;655:20:20;678:5;655:20;;;;;;;;;;;:28;;-1:-1:-1;;655:28:20;;;510:180::o;260:175::-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:20;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:20;424:4;401:27;;;260:175::o",
  "source": "pragma solidity ^0.5.9;\n\nimport \"./../Token36.sol\";\n\n\n/// @title GBP36 Token Contract\n/// @author element36.io\ncontract GBP36 is Token36 {\n\n    // Constructor\n    // Initial cap of 500'000 Tokens given by current sandbox limitation\n    /* solium-disable-next-line */\n    constructor() public Token36(\"British Pounds\", \"GBP36\", 18, 500000 * 10**18) {\n    }\n}",
  "sourcePath": "/Users/bum/element36/dev/cash36/contracts/contracts/GBP36/GBP36.sol",
  "ast": {
    "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/GBP36/GBP36.sol",
    "exportedSymbols": {
      "GBP36": [
        1145
      ]
    },
    "id": 1146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1127,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/Token36.sol",
        "file": "./../Token36.sol",
        "id": 1128,
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1928,
        "src": "25:26:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1129,
              "name": "Token36",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1927,
              "src": "129:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token36_$1927",
                "typeString": "contract Token36"
              }
            },
            "id": 1130,
            "nodeType": "InheritanceSpecifier",
            "src": "129:7:9"
          }
        ],
        "contractDependencies": [
          1073,
          1311,
          1927,
          2633,
          2718,
          3448,
          3517
        ],
        "contractKind": "contract",
        "documentation": "@title GBP36 Token Contract\n @author element36.io",
        "fullyImplemented": true,
        "id": 1145,
        "linearizedBaseContracts": [
          1145,
          1927,
          1073,
          2718,
          2633,
          1311,
          3448,
          3517
        ],
        "name": "GBP36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "348:7:9",
              "statements": []
            },
            "documentation": null,
            "id": 1144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4272697469736820506f756e6473",
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:16:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4d86d42f2c955f1b79ad6353de5b771467bb8e0230a97b8e9a2cf570da989e4f",
                      "typeString": "literal_string \"British Pounds\""
                    },
                    "value": "British Pounds"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4742503336",
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "318:7:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1edee2a8b9e0922ed68e4055e408e3f3232e9884620ccc72f1207c5578d70d20",
                      "typeString": "literal_string \"GBP36\""
                    },
                    "value": "GBP36"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "327:2:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "353030303030",
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "331:6:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000_by_1",
                        "typeString": "int_const 500000"
                      },
                      "value": "500000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "340:2:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "344:2:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "340:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "331:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    }
                  }
                ],
                "id": 1141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1132,
                  "name": "Token36",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1927,
                  "src": "292:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Token36_$1927_$",
                    "typeString": "type(contract Token36)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:55:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:9"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:9"
            },
            "scope": 1145,
            "src": "271:84:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1146,
        "src": "111:246:9"
      }
    ],
    "src": "0:357:9"
  },
  "legacyAST": {
    "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/GBP36/GBP36.sol",
    "exportedSymbols": {
      "GBP36": [
        1145
      ]
    },
    "id": 1146,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1127,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/Users/bum/element36/dev/cash36/contracts/contracts/Token36.sol",
        "file": "./../Token36.sol",
        "id": 1128,
        "nodeType": "ImportDirective",
        "scope": 1146,
        "sourceUnit": 1928,
        "src": "25:26:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1129,
              "name": "Token36",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1927,
              "src": "129:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token36_$1927",
                "typeString": "contract Token36"
              }
            },
            "id": 1130,
            "nodeType": "InheritanceSpecifier",
            "src": "129:7:9"
          }
        ],
        "contractDependencies": [
          1073,
          1311,
          1927,
          2633,
          2718,
          3448,
          3517
        ],
        "contractKind": "contract",
        "documentation": "@title GBP36 Token Contract\n @author element36.io",
        "fullyImplemented": true,
        "id": 1145,
        "linearizedBaseContracts": [
          1145,
          1927,
          1073,
          2718,
          2633,
          1311,
          3448,
          3517
        ],
        "name": "GBP36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1143,
              "nodeType": "Block",
              "src": "348:7:9",
              "statements": []
            },
            "documentation": null,
            "id": 1144,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4272697469736820506f756e6473",
                    "id": 1133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "300:16:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4d86d42f2c955f1b79ad6353de5b771467bb8e0230a97b8e9a2cf570da989e4f",
                      "typeString": "literal_string \"British Pounds\""
                    },
                    "value": "British Pounds"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4742503336",
                    "id": 1134,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "318:7:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_1edee2a8b9e0922ed68e4055e408e3f3232e9884620ccc72f1207c5578d70d20",
                      "typeString": "literal_string \"GBP36\""
                    },
                    "value": "GBP36"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "3138",
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "327:2:9",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  },
                  {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    },
                    "id": 1140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "hexValue": "353030303030",
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "331:6:9",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_500000_by_1",
                        "typeString": "int_const 500000"
                      },
                      "value": "500000"
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "hexValue": "3130",
                        "id": 1137,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "340:2:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "3138",
                        "id": 1138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "344:2:9",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_18_by_1",
                          "typeString": "int_const 18"
                        },
                        "value": "18"
                      },
                      "src": "340:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "331:15:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_500000000000000000000000_by_1",
                      "typeString": "int_const 500000000000000000000000"
                    }
                  }
                ],
                "id": 1141,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1132,
                  "name": "Token36",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1927,
                  "src": "292:7:9",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Token36_$1927_$",
                    "typeString": "type(contract Token36)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "292:55:9"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1131,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "282:2:9"
            },
            "returnParameters": {
              "id": 1142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "348:0:9"
            },
            "scope": 1145,
            "src": "271:84:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1146,
        "src": "111:246:9"
      }
    ],
    "src": "0:357:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.9+commit.e560f70d.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-09-12T14:54:01.913Z",
  "devdoc": {
    "author": "element36.io",
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "A uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Destroys `amount` tokens from the caller.     * See `ERC20._burn`."
      },
      "burnFrom(address,uint256)": {
        "details": "See `ERC20._burnFrom`."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "changeController(address)": {
        "details": "onlyController - only open to the currently assigned controller",
        "params": {
          "_newController": "The new controller of the contract"
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei.     * > Note that this information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including `IERC20.balanceOf` and `IERC20.transfer`."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when _allowed[msg.sender][spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token to a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      },
      "updateCap(uint256)": {
        "details": "Set a new cap for the token",
        "params": {
          "newCap": "The new cap for the token"
        }
      }
    },
    "title": "GBP36 Token Contract"
  },
  "userdoc": {
    "methods": {
      "changeController(address)": {
        "notice": "Changes the controller of the contract"
      },
      "getInitializationBlock()": {
        "notice": "@return Block number in which the contract was initialized"
      }
    }
  }
}